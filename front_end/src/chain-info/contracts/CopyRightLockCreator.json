{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_certificate",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_date",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_additional",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_hash",
          "type": "string"
        }
      ],
      "name": "addCertificate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "addressToContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_yourAddress",
          "type": "address"
        }
      ],
      "name": "arrayLengthGetter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_yourAddress",
          "type": "address"
        }
      ],
      "name": "getCertificatesYouOwn",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastCertificate",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMinimumFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "showBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "current_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "new_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cert_address",
          "type": "address"
        }
      ],
      "name": "transOwnership",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdEntryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/Penetrator Rynku/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/access/Ownable.sol",
    "1": "C:/Users/Penetrator Rynku/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/utils/Context.sol",
    "2": "C:/Users/Penetrator Rynku/.brownie/packages/smartcontractkit/chainlink@1.9.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "3": "contracts/CopyRightLock.sol",
    "4": "contracts/CopyRightLockCreator.sol"
  },
  "ast": {
    "absolutePath": "contracts/CopyRightLockCreator.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        481
      ],
      "Context": [
        560
      ],
      "CopyRightLock": [
        538
      ],
      "CopyRightLockCreator": [
        322
      ],
      "Ownable": [
        435
      ]
    },
    "id": 323,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "absolutePath": "C:/Users/Penetrator Rynku/.brownie/packages/smartcontractkit/chainlink@1.9.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 323,
        "sourceUnit": 482,
        "src": "57:76:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/Penetrator Rynku/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.7.3/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 323,
        "sourceUnit": 436,
        "src": "134:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/CopyRightLock.sol",
        "file": "./CopyRightLock.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 323,
        "sourceUnit": 539,
        "src": "187:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "Ownable",
              "nameLocations": [
                "251:7:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 435,
              "src": "251:7:4"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "251:7:4"
          }
        ],
        "canonicalName": "CopyRightLockCreator",
        "contractDependencies": [
          538
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 322,
        "linearizedBaseContracts": [
          322,
          435,
          560
        ],
        "name": "CopyRightLockCreator",
        "nameLocation": "227:20:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "e1746b97",
            "id": 11,
            "mutability": "mutable",
            "name": "addressToContract",
            "nameLocation": "307:17:4",
            "nodeType": "VariableDeclaration",
            "scope": 322,
            "src": "270:54:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 7,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "278:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "270:29:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 8,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "289:7:4",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 9,
                "nodeType": "ArrayTypeName",
                "src": "289:9:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15,
            "mutability": "mutable",
            "name": "certificatesStorageArray",
            "nameLocation": "354:24:4",
            "nodeType": "VariableDeclaration",
            "scope": 322,
            "src": "330:48:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_CopyRightLock_$538_$dyn_storage",
              "typeString": "contract CopyRightLock[]"
            },
            "typeName": {
              "baseType": {
                "id": 13,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 12,
                  "name": "CopyRightLock",
                  "nameLocations": [
                    "330:13:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 538,
                  "src": "330:13:4"
                },
                "referencedDeclaration": 538,
                "src": "330:13:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_CopyRightLock_$538",
                  "typeString": "contract CopyRightLock"
                }
              },
              "id": 14,
              "nodeType": "ArrayTypeName",
              "src": "330:15:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_CopyRightLock_$538_$dyn_storage_ptr",
                "typeString": "contract CopyRightLock[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "88ab139a",
            "id": 17,
            "mutability": "mutable",
            "name": "usdEntryFee",
            "nameLocation": "400:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 322,
            "src": "385:26:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "385:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 20,
            "mutability": "mutable",
            "name": "ethUsdPriceFeed",
            "nameLocation": "480:15:4",
            "nodeType": "VariableDeclaration",
            "scope": 322,
            "src": "449:46:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$481",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 19,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18,
                "name": "AggregatorV3Interface",
                "nameLocations": [
                  "449:21:4"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 481,
                "src": "449:21:4"
              },
              "referencedDeclaration": 481,
              "src": "449:21:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$481",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "541:149:4",
              "statements": [
                {
                  "expression": {
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25,
                      "name": "ethUsdPriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "551:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$481",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 27,
                          "name": "_priceFeedAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "591:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 26,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 481,
                        "src": "569:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$481_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 28,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "569:40:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$481",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "551:58:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$481",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "551:58:4"
                },
                {
                  "expression": {
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 31,
                      "name": "usdEntryFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "656:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_50000000000000000000_by_1",
                        "typeString": "int_const 50000000000000000000"
                      },
                      "id": 37,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3530",
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "670:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50_by_1",
                          "typeString": "int_const 50"
                        },
                        "value": "50"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 35,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 33,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "676:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 34,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "680:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "676:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          }
                        ],
                        "id": 36,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "675:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "670:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50000000000000000000_by_1",
                        "typeString": "int_const 50000000000000000000"
                      }
                    },
                    "src": "656:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "656:27:4"
                }
              ]
            },
            "id": 41,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "_priceFeedAddress",
                  "nameLocation": "522:17:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "514:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "514:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "513:27:4"
            },
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "541:0:4"
            },
            "scope": 322,
            "src": "502:188:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "1028:944:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 59,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1180:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1184:5:4",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1180:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 61,
                            "name": "getMinimumFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "1193:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1193:15:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1180:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420456e6f756768204554482c20796f75206861766520746f2070617920746f2063726561746520636572746966696361746521",
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1210:56:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54bf1655bf47547e1192f40e2ef0813465c1a1062c096b13f5c70eb0fbe7a351",
                          "typeString": "literal_string \"Not Enough ETH, you have to pay to create certificate!\""
                        },
                        "value": "Not Enough ETH, you have to pay to create certificate!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54bf1655bf47547e1192f40e2ef0813465c1a1062c096b13f5c70eb0fbe7a351",
                          "typeString": "literal_string \"Not Enough ETH, you have to pay to create certificate!\""
                        }
                      ],
                      "id": 58,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1172:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1172:95:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1172:95:4"
                },
                {
                  "assignments": [
                    69
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 69,
                      "mutability": "mutable",
                      "name": "certificateStorage",
                      "nameLocation": "1291:18:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 99,
                      "src": "1277:32:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CopyRightLock_$538",
                        "typeString": "contract CopyRightLock"
                      },
                      "typeName": {
                        "id": 68,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 67,
                          "name": "CopyRightLock",
                          "nameLocations": [
                            "1277:13:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 538,
                          "src": "1277:13:4"
                        },
                        "referencedDeclaration": 538,
                        "src": "1277:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CopyRightLock_$538",
                          "typeString": "contract CopyRightLock"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 81,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 73,
                        "name": "_certificate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1343:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 74,
                        "name": "_date",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "1369:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 75,
                        "name": "_title",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47,
                        "src": "1388:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 76,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "1408:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 77,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "1430:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 78,
                        "name": "_additional",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1449:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 79,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "1474:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 72,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1312:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_CopyRightLock_$538_$",
                        "typeString": "function (string memory,string memory,string memory,address,string memory,string memory,string memory) returns (contract CopyRightLock)"
                      },
                      "typeName": {
                        "id": 71,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 70,
                          "name": "CopyRightLock",
                          "nameLocations": [
                            "1316:13:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 538,
                          "src": "1316:13:4"
                        },
                        "referencedDeclaration": 538,
                        "src": "1316:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CopyRightLock_$538",
                          "typeString": "contract CopyRightLock"
                        }
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1312:177:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CopyRightLock_$538",
                      "typeString": "contract CopyRightLock"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1277:212:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85,
                        "name": "certificateStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "1650:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CopyRightLock_$538",
                          "typeString": "contract CopyRightLock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CopyRightLock_$538",
                          "typeString": "contract CopyRightLock"
                        }
                      ],
                      "expression": {
                        "id": 82,
                        "name": "certificatesStorageArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1620:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_CopyRightLock_$538_$dyn_storage",
                          "typeString": "contract CopyRightLock[] storage ref"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1645:4:4",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1620:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_CopyRightLock_$538_$dyn_storage_ptr_$_t_contract$_CopyRightLock_$538_$returns$__$bound_to$_t_array$_t_contract$_CopyRightLock_$538_$dyn_storage_ptr_$",
                        "typeString": "function (contract CopyRightLock[] storage pointer,contract CopyRightLock)"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1620:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1620:49:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 95,
                            "name": "certificateStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "1871:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CopyRightLock_$538",
                              "typeString": "contract CopyRightLock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CopyRightLock_$538",
                              "typeString": "contract CopyRightLock"
                            }
                          ],
                          "id": 94,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1863:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 93,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1863:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1863:27:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 88,
                          "name": "addressToContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1828:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 91,
                        "indexExpression": {
                          "expression": {
                            "id": 89,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1846:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1850:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1846:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1828:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1858:4:4",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1828:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1828:63:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1828:63:4"
                }
              ]
            },
            "functionSelector": "e0dd8ce9",
            "id": 100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCertificate",
            "nameLocation": "778:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "_certificate",
                  "nameLocation": "816:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "802:26:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "_date",
                  "nameLocation": "852:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "838:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "838:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47,
                  "mutability": "mutable",
                  "name": "_title",
                  "nameLocation": "881:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "867:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "867:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "905:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "897:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "897:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "937:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "923:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "923:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "_additional",
                  "nameLocation": "966:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "952:25:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "952:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "_hash",
                  "nameLocation": "1001:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "987:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "987:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "792:220:4"
            },
            "returnParameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1028:0:4"
            },
            "scope": 322,
            "src": "769:1203:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "2099:133:4",
              "statements": [
                {
                  "assignments": [
                    108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 108,
                      "mutability": "mutable",
                      "name": "lastIndex",
                      "nameLocation": "2117:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 121,
                      "src": "2109:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 107,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2109:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 113,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 109,
                        "name": "certificatesStorageArray",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "2129:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_CopyRightLock_$538_$dyn_storage",
                          "typeString": "contract CopyRightLock[] storage ref"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2154:6:4",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2129:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2163:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2129:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2109:55:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 116,
                          "name": "certificatesStorageArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "2189:24:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_CopyRightLock_$538_$dyn_storage",
                            "typeString": "contract CopyRightLock[] storage ref"
                          }
                        },
                        "id": 118,
                        "indexExpression": {
                          "id": 117,
                          "name": "lastIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 108,
                          "src": "2214:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2189:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CopyRightLock_$538",
                          "typeString": "contract CopyRightLock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CopyRightLock_$538",
                          "typeString": "contract CopyRightLock"
                        }
                      ],
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2181:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 114,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2181:7:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2181:44:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 106,
                  "id": 120,
                  "nodeType": "Return",
                  "src": "2174:51:4"
                }
              ]
            },
            "functionSelector": "cada8bfe",
            "id": 122,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 103,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 102,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2071:9:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 354,
                  "src": "2071:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "2071:9:4"
              }
            ],
            "name": "getLastCertificate",
            "nameLocation": "2038:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2056:2:4"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 105,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "2090:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2090:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2089:9:4"
            },
            "scope": 322,
            "src": "2029:203:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "2444:55:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 130,
                      "name": "addressToContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2461:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 132,
                    "indexExpression": {
                      "id": 131,
                      "name": "_yourAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "2479:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2461:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 129,
                  "id": 133,
                  "nodeType": "Return",
                  "src": "2454:38:4"
                }
              ]
            },
            "functionSelector": "2045cf32",
            "id": 135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCertificatesYouOwn",
            "nameLocation": "2333:21:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "_yourAddress",
                  "nameLocation": "2363:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "2355:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2355:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2354:22:4"
            },
            "returnParameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "2422:16:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 126,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2422:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 127,
                    "nodeType": "ArrayTypeName",
                    "src": "2422:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2421:18:4"
            },
            "scope": 322,
            "src": "2324:175:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "2664:544:4",
              "statements": [
                {
                  "assignments": [
                    null,
                    141,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 141,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "2684:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 170,
                      "src": "2677:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 140,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2677:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 145,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 142,
                        "name": "ethUsdPriceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "2699:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$481",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2715:15:4",
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 480,
                      "src": "2699:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2699:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2674:58:4"
                },
                {
                  "assignments": [
                    147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 147,
                      "mutability": "mutable",
                      "name": "adjustedPrice",
                      "nameLocation": "2798:13:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 170,
                      "src": "2790:21:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 146,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2790:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 156,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 150,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "2822:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2814:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 148,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2814:7:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2814:14:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2831:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2835:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "2831:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      }
                    },
                    "src": "2814:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2790:47:4"
                },
                {
                  "assignments": [
                    158
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 158,
                      "mutability": "mutable",
                      "name": "costToEnter",
                      "nameLocation": "3000:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 170,
                      "src": "2992:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 157,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2992:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 167,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 159,
                            "name": "usdEntryFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "3015:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3029:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 161,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3033:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "3029:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "3015:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 164,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3014:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 165,
                      "name": "adjustedPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 147,
                      "src": "3039:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3014:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2992:60:4"
                },
                {
                  "expression": {
                    "id": 168,
                    "name": "costToEnter",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 158,
                    "src": "3175:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 139,
                  "id": 169,
                  "nodeType": "Return",
                  "src": "3168:18:4"
                }
              ]
            },
            "functionSelector": "4cd370b9",
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMinimumFee",
            "nameLocation": "2618:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2631:2:4"
            },
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 171,
                  "src": "2655:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2655:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2654:9:4"
            },
            "scope": 322,
            "src": "2609:599:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "3321:86:4",
              "statements": [
                {
                  "assignments": [
                    179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 179,
                      "mutability": "mutable",
                      "name": "POPbalance",
                      "nameLocation": "3339:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 188,
                      "src": "3331:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 178,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3331:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 185,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 182,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "3360:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CopyRightLockCreator_$322",
                            "typeString": "contract CopyRightLockCreator"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CopyRightLockCreator_$322",
                            "typeString": "contract CopyRightLockCreator"
                          }
                        ],
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3352:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 180,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3352:7:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3352:13:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3366:7:4",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "3352:21:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3331:42:4"
                },
                {
                  "expression": {
                    "id": 186,
                    "name": "POPbalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 179,
                    "src": "3390:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 177,
                  "id": 187,
                  "nodeType": "Return",
                  "src": "3383:17:4"
                }
              ]
            },
            "functionSelector": "81b2d07b",
            "id": 189,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 174,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 173,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3293:9:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 354,
                  "src": "3293:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3293:9:4"
              }
            ],
            "name": "showBalance",
            "nameLocation": "3267:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3278:2:4"
            },
            "returnParameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "3312:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3312:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3311:9:4"
            },
            "scope": 322,
            "src": "3258:149:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 207,
              "nodeType": "Block",
              "src": "3566:68:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 202,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3613:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CopyRightLockCreator_$322",
                                "typeString": "contract CopyRightLockCreator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CopyRightLockCreator_$322",
                                "typeString": "contract CopyRightLockCreator"
                              }
                            ],
                            "id": 201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3605:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 200,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3605:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3605:13:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3619:7:4",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "3605:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 196,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3584:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3588:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3584:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3576:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 194,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3576:8:4",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3576:19:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3596:8:4",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3576:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3576:51:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "3576:51:4"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 208,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 192,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 191,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3556:9:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 354,
                  "src": "3556:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3556:9:4"
              }
            ],
            "name": "withdraw",
            "nameLocation": "3530:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3538:2:4"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3566:0:4"
            },
            "scope": 322,
            "src": "3521:113:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 235,
              "nodeType": "Block",
              "src": "3780:217:4",
              "statements": [
                {
                  "assignments": [
                    220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 220,
                      "mutability": "mutable",
                      "name": "all_certs_array",
                      "nameLocation": "3795:15:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 235,
                      "src": "3790:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 219,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3790:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 223,
                  "initialValue": {
                    "expression": {
                      "id": 221,
                      "name": "certificatesStorageArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "3813:24:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_CopyRightLock_$538_$dyn_storage",
                        "typeString": "contract CopyRightLock[] storage ref"
                      }
                    },
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3838:6:4",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3813:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3790:54:4"
                },
                {
                  "assignments": [
                    225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 225,
                      "mutability": "mutable",
                      "name": "clients_owned_certs_array",
                      "nameLocation": "3859:25:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 235,
                      "src": "3854:30:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 224,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3854:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 230,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 227,
                          "name": "_yourAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 210,
                          "src": "3909:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 226,
                        "name": "getCertificatesYouOwn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "3887:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function (address) view returns (address[] memory)"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3887:35:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3923:6:4",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3887:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3854:75:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 231,
                        "name": "all_certs_array",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "3947:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 232,
                        "name": "clients_owned_certs_array",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 225,
                        "src": "3964:25:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 233,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3946:44:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 218,
                  "id": 234,
                  "nodeType": "Return",
                  "src": "3939:51:4"
                }
              ]
            },
            "functionSelector": "a3d565a5",
            "id": 236,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 213,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 212,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3749:9:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 354,
                  "src": "3749:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "3749:9:4"
              }
            ],
            "name": "arrayLengthGetter",
            "nameLocation": "3697:17:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "_yourAddress",
                  "nameLocation": "3723:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "3715:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3715:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3714:22:4"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "3768:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3768:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 217,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 236,
                  "src": "3774:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 216,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3774:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3767:12:4"
            },
            "scope": 322,
            "src": "3688:309:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 320,
              "nodeType": "Block",
              "src": "4157:866:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 246,
                          "name": "current_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 238,
                          "src": "4184:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 247,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4201:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4205:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4201:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4184:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520417265204e6f74204f776e6572204f66205468697320436572746966696361746521",
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4213:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83365d7ab85886b827347775d0a7dcce76205e3268f4935ce0f5653558a13c3e",
                          "typeString": "literal_string \"You Are Not Owner Of This Certificate!\""
                        },
                        "value": "You Are Not Owner Of This Certificate!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_83365d7ab85886b827347775d0a7dcce76205e3268f4935ce0f5653558a13c3e",
                          "typeString": "literal_string \"You Are Not Owner Of This Certificate!\""
                        }
                      ],
                      "id": 245,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4176:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4176:78:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "4176:78:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 254,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4272:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4276:5:4",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4272:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 256,
                            "name": "getMinimumFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "4285:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4285:15:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4272:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420456e6f756768204554482c20796f75206861766520746f2070617920746f2063726561746520636572746966696361746521",
                        "id": 259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4302:56:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54bf1655bf47547e1192f40e2ef0813465c1a1062c096b13f5c70eb0fbe7a351",
                          "typeString": "literal_string \"Not Enough ETH, you have to pay to create certificate!\""
                        },
                        "value": "Not Enough ETH, you have to pay to create certificate!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54bf1655bf47547e1192f40e2ef0813465c1a1062c096b13f5c70eb0fbe7a351",
                          "typeString": "literal_string \"Not Enough ETH, you have to pay to create certificate!\""
                        }
                      ],
                      "id": 253,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4264:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4264:95:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "4264:95:4"
                },
                {
                  "assignments": [
                    266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 266,
                      "mutability": "mutable",
                      "name": "current_owner_certs",
                      "nameLocation": "4395:19:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 320,
                      "src": "4378:36:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 264,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4378:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 265,
                        "nodeType": "ArrayTypeName",
                        "src": "4378:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 270,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 268,
                        "name": "current_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 238,
                        "src": "4439:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 267,
                      "name": "getCertificatesYouOwn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "4417:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (address) view returns (address[] memory)"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4417:36:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4378:75:4"
                },
                {
                  "expression": {
                    "id": 275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4472:40:4",
                    "subExpression": {
                      "components": [
                        {
                          "baseExpression": {
                            "id": 271,
                            "name": "addressToContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "4479:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                              "typeString": "mapping(address => address[] storage ref)"
                            }
                          },
                          "id": 273,
                          "indexExpression": {
                            "id": 272,
                            "name": "current_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 238,
                            "src": "4497:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "4479:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        }
                      ],
                      "id": 274,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "4478:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 276,
                  "nodeType": "ExpressionStatement",
                  "src": "4472:40:4"
                },
                {
                  "body": {
                    "id": 318,
                    "nodeType": "Block",
                    "src": "4720:297:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 288,
                              "name": "current_owner_certs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "4738:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 290,
                            "indexExpression": {
                              "id": 289,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 278,
                              "src": "4758:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4738:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 291,
                            "name": "cert_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "4764:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4738:38:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 301,
                        "nodeType": "IfStatement",
                        "src": "4734:123:4",
                        "trueBody": {
                          "id": 300,
                          "nodeType": "Block",
                          "src": "4777:80:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 297,
                                    "name": "cert_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 242,
                                    "src": "4829:12:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "id": 293,
                                      "name": "addressToContract",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11,
                                      "src": "4795:17:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                        "typeString": "mapping(address => address[] storage ref)"
                                      }
                                    },
                                    "id": 295,
                                    "indexExpression": {
                                      "id": 294,
                                      "name": "new_owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 240,
                                      "src": "4813:9:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4795:28:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 296,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4824:4:4",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "4795:33:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4795:47:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 299,
                              "nodeType": "ExpressionStatement",
                              "src": "4795:47:4"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 302,
                              "name": "current_owner_certs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "4874:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 304,
                            "indexExpression": {
                              "id": 303,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 278,
                              "src": "4894:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4874:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 305,
                            "name": "cert_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "4900:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4874:38:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 317,
                        "nodeType": "IfStatement",
                        "src": "4870:137:4",
                        "trueBody": {
                          "id": 316,
                          "nodeType": "Block",
                          "src": "4913:94:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 311,
                                      "name": "current_owner_certs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 266,
                                      "src": "4969:19:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 313,
                                    "indexExpression": {
                                      "id": 312,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 278,
                                      "src": "4989:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4969:22:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "id": 307,
                                      "name": "addressToContract",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11,
                                      "src": "4931:17:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                                        "typeString": "mapping(address => address[] storage ref)"
                                      }
                                    },
                                    "id": 309,
                                    "indexExpression": {
                                      "id": 308,
                                      "name": "current_owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 238,
                                      "src": "4949:13:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4931:32:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 310,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4964:4:4",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "4931:37:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4931:61:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 315,
                              "nodeType": "ExpressionStatement",
                              "src": "4931:61:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 281,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "4684:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 282,
                        "name": "current_owner_certs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "4688:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4708:6:4",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4688:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4684:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 319,
                  "initializationExpression": {
                    "assignments": [
                      278
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 278,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4679:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 319,
                        "src": "4674:6:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 277,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4674:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 280,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4681:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4674:8:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4716:3:4",
                      "subExpression": {
                        "id": 285,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "4716:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 287,
                    "nodeType": "ExpressionStatement",
                    "src": "4716:3:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "4669:348:4"
                }
              ]
            },
            "functionSelector": "e2041f94",
            "id": 321,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transOwnership",
            "nameLocation": "4063:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 238,
                  "mutability": "mutable",
                  "name": "current_owner",
                  "nameLocation": "4086:13:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "4078:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4078:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 240,
                  "mutability": "mutable",
                  "name": "new_owner",
                  "nameLocation": "4109:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "4101:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4101:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 242,
                  "mutability": "mutable",
                  "name": "cert_address",
                  "nameLocation": "4128:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "4120:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4120:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4077:64:4"
            },
            "returnParameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4157:0:4"
            },
            "scope": 322,
            "src": "4054:969:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 323,
        "src": "218:4807:4",
        "usedErrors": []
      }
    ],
    "src": "32:4994:4"
  },
  "bytecode": "",
  "bytecodeSha1": "83e72accd5bbd152a3cdfc00691d2df585d2a200",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.16+commit.07a7930e"
  },
  "contractName": "CopyRightLockCreator",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "27": [
            1422,
            1445,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "26": [
            2169,
            2191,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "CopyRightLockCreator.addCertificate": {
          "21": [
            1180,
            1208,
            true
          ]
        },
        "CopyRightLockCreator.transOwnership": {
          "22": [
            4184,
            4211,
            true
          ],
          "23": [
            4272,
            4300,
            true
          ],
          "24": [
            4738,
            4776,
            false
          ],
          "25": [
            4874,
            4912,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "18": [
            1414,
            1482
          ]
        },
        "Ownable._transferOwnership": {
          "19": [
            2541,
            2558
          ],
          "20": [
            2568,
            2613
          ]
        },
        "Ownable.owner": {
          "0": [
            1266,
            1279
          ]
        },
        "Ownable.renounceOwnership": {
          "3": [
            1895,
            1925
          ]
        },
        "Ownable.transferOwnership": {
          "15": [
            2161,
            2234
          ],
          "16": [
            2244,
            2272
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "17": [
            712,
            729
          ]
        }
      },
      "2": {},
      "3": {},
      "4": {
        "CopyRightLockCreator.addCertificate": {
          "6": [
            1172,
            1267
          ],
          "7": [
            1620,
            1669
          ],
          "8": [
            1828,
            1891
          ]
        },
        "CopyRightLockCreator.arrayLengthGetter": {
          "4": [
            3939,
            3990
          ]
        },
        "CopyRightLockCreator.getCertificatesYouOwn": {
          "1": [
            2454,
            2492
          ]
        },
        "CopyRightLockCreator.getLastCertificate": {
          "5": [
            2174,
            2225
          ]
        },
        "CopyRightLockCreator.transOwnership": {
          "9": [
            4176,
            4254
          ],
          "10": [
            4264,
            4359
          ],
          "11": [
            4472,
            4512
          ],
          "12": [
            4795,
            4842
          ],
          "13": [
            4931,
            4992
          ],
          "14": [
            4716,
            4719
          ]
        },
        "CopyRightLockCreator.withdraw": {
          "2": [
            3576,
            3627
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink@1.9.0/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Context",
    "CopyRightLock",
    "OpenZeppelin/openzeppelin-contracts@4.7.3/Ownable"
  ],
  "deployedBytecode": "608060405260043610620000d25760003560e01c80638da5cb5b1162000089578063e0dd8ce91162000060578063e0dd8ce91462000216578063e1746b97146200022d578063e2041f941462000252578063f2fde38b146200026957600080fd5b80638da5cb5b146200018f578063a3d565a514620001c3578063cada8bfe14620001fe57600080fd5b80632045cf3214620000d75780633ccfd60b14620001145780634cd370b91462000120578063715018a6146200014757806381b2d07b146200015f57806388ab139a1462000177575b600080fd5b348015620000e457600080fd5b50620000fc620000f636600462000961565b6200028e565b6040516200010b919062000986565b60405180910390f35b6200011e62000306565b005b3480156200012d57600080fd5b506200013862000340565b6040519081526020016200010b565b3480156200015457600080fd5b506200011e620003fc565b3480156200016c57600080fd5b506200013862000414565b3480156200018457600080fd5b506200013860035481565b3480156200019c57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016200010b565b348015620001d057600080fd5b50620001e8620001e236600462000961565b62000425565b604080519283526020830191909152016200010b565b3480156200020b57600080fd5b50620001aa6200044f565b6200011e6200022736600462000a80565b620004a2565b3480156200023a57600080fd5b50620001aa6200024c36600462000b9c565b62000599565b6200011e6200026336600462000bc9565b620005d2565b3480156200027657600080fd5b506200011e6200028836600462000961565b620007d9565b6001600160a01b038116600090815260016020908152604091829020805483518184028101840190945280845260609392830182828015620002fa57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620002db575b50505050509050919050565b6200031062000855565b60405133904780156108fc02916000818181858888f193505050501580156200033d573d6000803e3d6000fd5b50565b6004805460408051633fabe5a360e21b8152905160009384936001600160a01b03169263feaf968c928183019260a0928290030181865afa1580156200038a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003b0919062000c2e565b5050509150506000816402540be400620003cb919062000c99565b9050600081600354670de0b6b3a7640000620003e8919062000c99565b620003f4919062000cbb565b949350505050565b6200040662000855565b620004126000620008b1565b565b60006200042062000855565b504790565b6000806200043262000855565b600254600062000442856200028e565b5191935090915050915091565b60006200045b62000855565b6002546000906200046f9060019062000cde565b90506002818154811062000487576200048762000cfa565b6000918252602090912001546001600160a01b031691505090565b620004ac62000340565b341015620004d75760405162461bcd60e51b8152600401620004ce9062000d10565b60405180910390fd5b600087878787878787604051620004ee9062000901565b62000500979695949392919062000dae565b604051809103906000f0801580156200051d573d6000803e3d6000fd5b506002805460018181019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b039093166001600160a01b03199384168117909155336000908152602083815260408220805494850181558252902090910180549092161790555050505050505050565b60016020528160005260406000208181548110620005b657600080fd5b6000918252602090912001546001600160a01b03169150829050565b6001600160a01b03831633146200063b5760405162461bcd60e51b815260206004820152602660248201527f596f7520417265204e6f74204f776e6572204f6620546869732043657274696660448201526569636174652160d01b6064820152608401620004ce565b6200064562000340565b341015620006675760405162461bcd60e51b8152600401620004ce9062000d10565b600062000674846200028e565b6001600160a01b03851660009081526001602052604081209192506200069b91906200090f565b60005b8151811015620007d257826001600160a01b0316828281518110620006c757620006c762000cfa565b60200260200101516001600160a01b0316036200071c576001600160a01b03848116600090815260016020818152604083208054928301815583529091200180546001600160a01b0319169185169190911790555b826001600160a01b03168282815181106200073b576200073b62000cfa565b60200260200101516001600160a01b031614620007bd576001600160a01b0385166000908152600160205260409020825183908390811062000781576200078162000cfa565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790555b80620007c98162000e4c565b9150506200069e565b5050505050565b620007e362000855565b6001600160a01b0381166200084a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620004ce565b6200033d81620008b1565b6000546001600160a01b03163314620004125760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620004ce565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610c3b8062000e6983390190565b50805460008255906000526020600020908101906200033d91905b808211156200094057600081556001016200092a565b5090565b80356001600160a01b03811681146200095c57600080fd5b919050565b6000602082840312156200097457600080fd5b6200097f8262000944565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015620009c95783516001600160a01b031683529284019291840191600101620009a2565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620009fd57600080fd5b813567ffffffffffffffff8082111562000a1b5762000a1b620009d5565b604051601f8301601f19908116603f0116810190828211818310171562000a465762000a46620009d5565b8160405283815286602085880101111562000a6057600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600060e0888a03121562000a9c57600080fd5b873567ffffffffffffffff8082111562000ab557600080fd5b62000ac38b838c01620009eb565b985060208a013591508082111562000ada57600080fd5b62000ae88b838c01620009eb565b975060408a013591508082111562000aff57600080fd5b62000b0d8b838c01620009eb565b965062000b1d60608b0162000944565b955060808a013591508082111562000b3457600080fd5b62000b428b838c01620009eb565b945060a08a013591508082111562000b5957600080fd5b62000b678b838c01620009eb565b935060c08a013591508082111562000b7e57600080fd5b5062000b8d8a828b01620009eb565b91505092959891949750929550565b6000806040838503121562000bb057600080fd5b62000bbb8362000944565b946020939093013593505050565b60008060006060848603121562000bdf57600080fd5b62000bea8462000944565b925062000bfa6020850162000944565b915062000c0a6040850162000944565b90509250925092565b805169ffffffffffffffffffff811681146200095c57600080fd5b600080600080600060a0868803121562000c4757600080fd5b62000c528662000c13565b945060208601519350604086015192506060860151915062000c776080870162000c13565b90509295509295909350565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161562000cb65762000cb662000c83565b500290565b60008262000cd957634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111562000cf45762000cf462000c83565b92915050565b634e487b7160e01b600052603260045260246000fd5b60208082526036908201527f4e6f7420456e6f756768204554482c20796f75206861766520746f2070617920604082015275746f206372656174652063657274696669636174652160501b606082015260800190565b6000815180845260005b8181101562000d8e5760208185018101518683018201520162000d70565b506000602082860101526020601f19601f83011685010191505092915050565b60e08152600062000dc360e083018a62000d66565b828103602084015262000dd7818a62000d66565b9050828103604084015262000ded818962000d66565b6001600160a01b03881660608501528381036080850152905062000e12818762000d66565b905082810360a084015262000e28818662000d66565b905082810360c084015262000e3e818562000d66565b9a9950505050505050505050565b60006001820162000e615762000e6162000c83565b506001019056fe60806040523480156200001157600080fd5b5060405162000c3b38038062000c3b83398101604081905262000034916200029f565b6200003f336200016d565b6040805160e081018252888152602081018890529081018690526001600160a01b03851660608201526080810184905260a0810183905260c08101829052600180548082018255600091909152815160079091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601908190620000c4908262000449565b5060208201516001820190620000db908262000449565b5060408201516002820190620000f2908262000449565b5060608201516003820180546001600160a01b0319166001600160a01b03909216919091179055608082015160048201906200012f908262000449565b5060a0820151600582019062000146908262000449565b5060c082015160068201906200015d908262000449565b5050505050505050505062000515565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001e557600080fd5b81516001600160401b0380821115620002025762000202620001bd565b604051601f8301601f19908116603f011681019082821181831017156200022d576200022d620001bd565b816040528381526020925086838588010111156200024a57600080fd5b600091505b838210156200026e57858201830151818301840152908201906200024f565b600093810190920192909252949350505050565b80516001600160a01b03811681146200029a57600080fd5b919050565b600080600080600080600060e0888a031215620002bb57600080fd5b87516001600160401b0380821115620002d357600080fd5b620002e18b838c01620001d3565b985060208a0151915080821115620002f857600080fd5b620003068b838c01620001d3565b975060408a01519150808211156200031d57600080fd5b6200032b8b838c01620001d3565b96506200033b60608b0162000282565b955060808a01519150808211156200035257600080fd5b620003608b838c01620001d3565b945060a08a01519150808211156200037757600080fd5b620003858b838c01620001d3565b935060c08a01519150808211156200039c57600080fd5b50620003ab8a828b01620001d3565b91505092959891949750929550565b600181811c90821680620003cf57607f821691505b602082108103620003f057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200044457600081815260208120601f850160051c810160208610156200041f5750805b601f850160051c820191505b8181101562000440578281556001016200042b565b5050505b505050565b81516001600160401b03811115620004655762000465620001bd565b6200047d81620004768454620003ba565b84620003f6565b602080601f831160018114620004b557600084156200049c5750858301515b600019600386901b1c1916600185901b17855562000440565b600085815260208120601f198616915b82811015620004e657888601518255948401946001909101908401620004c5565b5085821015620005055787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61071680620005256000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063365b98b214610051578063715018a6146100805780638da5cb5b1461008a578063f2fde38b146100a5575b600080fd5b61006461005f366004610585565b6100b8565b60405161007797969594939291906105e4565b60405180910390f35b610088610449565b005b6000546040516001600160a01b039091168152602001610077565b6100886100b3366004610676565b61045d565b600181815481106100c857600080fd5b90600052602060002090600702016000915090508060000180546100eb906106a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610117906106a6565b80156101645780601f1061013957610100808354040283529160200191610164565b820191906000526020600020905b81548152906001019060200180831161014757829003601f168201915b505050505090806001018054610179906106a6565b80601f01602080910402602001604051908101604052809291908181526020018280546101a5906106a6565b80156101f25780601f106101c7576101008083540402835291602001916101f2565b820191906000526020600020905b8154815290600101906020018083116101d557829003601f168201915b505050505090806002018054610207906106a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610233906106a6565b80156102805780601f1061025557610100808354040283529160200191610280565b820191906000526020600020905b81548152906001019060200180831161026357829003601f168201915b505050600384015460048501805494956001600160a01b039092169491935091506102aa906106a6565b80601f01602080910402602001604051908101604052809291908181526020018280546102d6906106a6565b80156103235780601f106102f857610100808354040283529160200191610323565b820191906000526020600020905b81548152906001019060200180831161030657829003601f168201915b505050505090806005018054610338906106a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610364906106a6565b80156103b15780601f10610386576101008083540402835291602001916103b1565b820191906000526020600020905b81548152906001019060200180831161039457829003601f168201915b5050505050908060060180546103c6906106a6565b80601f01602080910402602001604051908101604052809291908181526020018280546103f2906106a6565b801561043f5780601f106104145761010080835404028352916020019161043f565b820191906000526020600020905b81548152906001019060200180831161042257829003601f168201915b5050505050905087565b6104516104db565b61045b6000610535565b565b6104656104db565b6001600160a01b0381166104cf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6104d881610535565b50565b6000546001600160a01b0316331461045b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104c6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561059757600080fd5b5035919050565b6000815180845260005b818110156105c4576020818501810151868301820152016105a8565b506000602082860101526020601f19601f83011685010191505092915050565b60e0815260006105f760e083018a61059e565b8281036020840152610609818a61059e565b9050828103604084015261061d818961059e565b6001600160a01b038816606085015283810360808501529050610640818761059e565b905082810360a0840152610654818661059e565b905082810360c0840152610668818561059e565b9a9950505050505050505050565b60006020828403121561068857600080fd5b81356001600160a01b038116811461069f57600080fd5b9392505050565b600181811c908216806106ba57607f821691505b6020821081036106da57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220bfeb9879991a2df0966991c762aa9a8871b5405dea8d98e914796fa32785195664736f6c63430008100033a26469706673582212207a0a4cf5a3800a11a69a55cb81da23ffc38de6808073fbf514ff888ba52ed06064736f6c63430008100033",
  "deployedSourceMap": "218:4807:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2324:175;;;;;;;;;;-1:-1:-1;2324:175:4;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3521:113;;;:::i;:::-;;2609:599;;;;;;;;;;;;;:::i;:::-;;;1192:25:5;;;1180:2;1165:18;2609:599:4;1046:177:5;1831:101:0;;;;;;;;;;;;;:::i;3258:149:4:-;;;;;;;;;;;;;:::i;385:26::-;;;;;;;;;;;;;;;;1201:85:0;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;;-1:-1:-1;;;;;1392:32:5;;;1374:51;;1362:2;1347:18;1201:85:0;1228:203:5;3688:309:4;;;;;;;;;;-1:-1:-1;3688:309:4;;;;;:::i;:::-;;:::i;:::-;;;;1610:25:5;;;1666:2;1651:18;;1644:34;;;;1583:18;3688:309:4;1436:248:5;2029:203:4;;;;;;;;;;;;;:::i;769:1203::-;;;;;;:::i;:::-;;:::i;270:54::-;;;;;;;;;;-1:-1:-1;270:54:4;;;;;:::i;:::-;;:::i;4054:969::-;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;2324:175:4:-;-1:-1:-1;;;;;2461:31:4;;;;;;:17;:31;;;;;;;;;2454:38;;;;;;;;;;;;;;;;;2422:16;;2454:38;;;2461:31;2454:38;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2454:38:4;;;;;;;;;;;;;;;;;;;;;;;2324:175;;;:::o;3521:113::-;1094:13:0;:11;:13::i;:::-;3576:51:4::1;::::0;3584:10:::1;::::0;3605:21:::1;3576:51:::0;::::1;;;::::0;::::1;::::0;;;3605:21;3584:10;3576:51;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;3521:113::o:0;2609:599::-;2699:15;;;:33;;;-1:-1:-1;;;2699:33:4;;;;2655:7;;;;-1:-1:-1;;;;;2699:15:4;;:31;;:33;;;;;;;;;;;:15;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2674:58;;;;;;2790:21;2822:5;2831:6;2814:23;;;;:::i;:::-;2790:47;;2992:19;3039:13;3015:11;;3029:6;3015:20;;;;:::i;:::-;3014:38;;;;:::i;:::-;2992:60;2609:599;-1:-1:-1;;;;2609:599:4:o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;3258:149:4:-;3312:7;1094:13:0;:11;:13::i;:::-;-1:-1:-1;3352:21:4::1;3258:149:::0;:::o;3688:309::-;3768:4;3774;1094:13:0;:11;:13::i;:::-;3813:24:4::1;:31:::0;3790:20:::1;3887:35;3909:12:::0;3887:21:::1;:35::i;:::-;:42:::0;3947:15;;-1:-1:-1;3887:42:4;;-1:-1:-1;;3688:309:4;;;:::o;2029:203::-;2090:7;1094:13:0;:11;:13::i;:::-;2129:24:4::1;:31:::0;2109:17:::1;::::0;2129:35:::1;::::0;2163:1:::1;::::0;2129:35:::1;:::i;:::-;2109:55;;2189:24;2214:9;2189:35;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;2189:35:4::1;::::0;-1:-1:-1;;2029:203:4;:::o;769:1203::-;1193:15;:13;:15::i;:::-;1180:9;:28;;1172:95;;;;-1:-1:-1;;;1172:95:4;;;;;;;:::i;:::-;;;;;;;;;1277:32;1343:12;1369:5;1388:6;1408:8;1430:5;1449:11;1474:5;1312:177;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1620:24:4;:49;;;;;;;;;;;;;-1:-1:-1;;;;;1620:49:4;;;-1:-1:-1;;;;;;1620:49:4;;;;;;;;1846:10;-1:-1:-1;1828:29:4;;;1620:49;1828:29;;;;;;:63;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;769:1203:4:o;270:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;270:54:4;;-1:-1:-1;270:54:4;;-1:-1:-1;270:54:4:o;4054:969::-;-1:-1:-1;;;;;4184:27:4;;4201:10;4184:27;4176:78;;;;-1:-1:-1;;;4176:78:4;;8218:2:5;4176:78:4;;;8200:21:5;8257:2;8237:18;;;8230:30;8296:34;8276:18;;;8269:62;-1:-1:-1;;;8347:18:5;;;8340:36;8393:19;;4176:78:4;8016:402:5;4176:78:4;4285:15;:13;:15::i;:::-;4272:9;:28;;4264:95;;;;-1:-1:-1;;;4264:95:4;;;;;;;:::i;:::-;4378:36;4417;4439:13;4417:21;:36::i;:::-;-1:-1:-1;;;;;4479:32:4;;;;;;:17;:32;;;;;4378:75;;-1:-1:-1;4472:40:4;;4479:32;4472:40;:::i;:::-;4674:6;4669:348;4688:19;:26;4684:1;:30;4669:348;;;4764:12;-1:-1:-1;;;;;4738:38:4;:19;4758:1;4738:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4738:38:4;;4734:123;;-1:-1:-1;;;;;4795:28:4;;;;;;;:17;:28;;;;;;;:47;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4795:47:4;;;;;;;;;;4734:123;4900:12;-1:-1:-1;;;;;4874:38:4;:19;4894:1;4874:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4874:38:4;;4870:137;;-1:-1:-1;;;;;4931:32:4;;;;;;:17;:32;;;;;4969:22;;:19;;4989:1;;4969:22;;;;;;:::i;:::-;;;;;;;;;;;;4931:61;;;;;;;-1:-1:-1;4931:61:4;;;;;;;;;;-1:-1:-1;;;;;;4931:61:4;-1:-1:-1;;;;;4931:61:4;;;;;;;;;4870:137;4716:3;;;;:::i;:::-;;;;4669:348;;;;4157:866;4054:969;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;8765:2:5;2161:73:0::1;::::0;::::1;8747:21:5::0;8804:2;8784:18;;;8777:30;8843:34;8823:18;;;8816:62;-1:-1:-1;;;8894:18:5;;;8887:36;8940:19;;2161:73:0::1;8563:402:5::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;1359:130::-:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:1;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;9172:2:5;1414:68:0;;;9154:21:5;;;9191:18;;;9184:30;9250:34;9230:18;;;9223:62;9302:18;;1414:68:0;8970:356:5;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:173:5:-;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:5:o;383:658::-;554:2;606:21;;;676:13;;579:18;;;698:22;;;525:4;;554:2;777:15;;;;751:2;736:18;;;525:4;820:195;834:6;831:1;828:13;820:195;;;899:13;;-1:-1:-1;;;;;895:39:5;883:52;;990:15;;;;955:12;;;;931:1;849:9;820:195;;;-1:-1:-1;1032:3:5;;383:658;-1:-1:-1;;;;;;383:658:5:o;1689:127::-;1750:10;1745:3;1741:20;1738:1;1731:31;1781:4;1778:1;1771:15;1805:4;1802:1;1795:15;1821:719;1864:5;1917:3;1910:4;1902:6;1898:17;1894:27;1884:55;;1935:1;1932;1925:12;1884:55;1971:6;1958:20;1997:18;2034:2;2030;2027:10;2024:36;;;2040:18;;:::i;:::-;2115:2;2109:9;2083:2;2169:13;;-1:-1:-1;;2165:22:5;;;2189:2;2161:31;2157:40;2145:53;;;2213:18;;;2233:22;;;2210:46;2207:72;;;2259:18;;:::i;:::-;2299:10;2295:2;2288:22;2334:2;2326:6;2319:18;2380:3;2373:4;2368:2;2360:6;2356:15;2352:26;2349:35;2346:55;;;2397:1;2394;2387:12;2346:55;2461:2;2454:4;2446:6;2442:17;2435:4;2427:6;2423:17;2410:54;2508:1;2501:4;2496:2;2488:6;2484:15;2480:26;2473:37;2528:6;2519:15;;;;;;1821:719;;;;:::o;2545:1421::-;2718:6;2726;2734;2742;2750;2758;2766;2819:3;2807:9;2798:7;2794:23;2790:33;2787:53;;;2836:1;2833;2826:12;2787:53;2876:9;2863:23;2905:18;2946:2;2938:6;2935:14;2932:34;;;2962:1;2959;2952:12;2932:34;2985:50;3027:7;3018:6;3007:9;3003:22;2985:50;:::i;:::-;2975:60;;3088:2;3077:9;3073:18;3060:32;3044:48;;3117:2;3107:8;3104:16;3101:36;;;3133:1;3130;3123:12;3101:36;3156:52;3200:7;3189:8;3178:9;3174:24;3156:52;:::i;:::-;3146:62;;3261:2;3250:9;3246:18;3233:32;3217:48;;3290:2;3280:8;3277:16;3274:36;;;3306:1;3303;3296:12;3274:36;3329:52;3373:7;3362:8;3351:9;3347:24;3329:52;:::i;:::-;3319:62;;3400:38;3434:2;3423:9;3419:18;3400:38;:::i;:::-;3390:48;;3491:3;3480:9;3476:19;3463:33;3447:49;;3521:2;3511:8;3508:16;3505:36;;;3537:1;3534;3527:12;3505:36;3560:52;3604:7;3593:8;3582:9;3578:24;3560:52;:::i;:::-;3550:62;;3665:3;3654:9;3650:19;3637:33;3621:49;;3695:2;3685:8;3682:16;3679:36;;;3711:1;3708;3701:12;3679:36;3734:52;3778:7;3767:8;3756:9;3752:24;3734:52;:::i;:::-;3724:62;;3839:3;3828:9;3824:19;3811:33;3795:49;;3869:2;3859:8;3856:16;3853:36;;;3885:1;3882;3875:12;3853:36;;3908:52;3952:7;3941:8;3930:9;3926:24;3908:52;:::i;:::-;3898:62;;;2545:1421;;;;;;;;;;:::o;3971:254::-;4039:6;4047;4100:2;4088:9;4079:7;4075:23;4071:32;4068:52;;;4116:1;4113;4106:12;4068:52;4139:29;4158:9;4139:29;:::i;:::-;4129:39;4215:2;4200:18;;;;4187:32;;-1:-1:-1;;;3971:254:5:o;4230:334::-;4307:6;4315;4323;4376:2;4364:9;4355:7;4351:23;4347:32;4344:52;;;4392:1;4389;4382:12;4344:52;4415:29;4434:9;4415:29;:::i;:::-;4405:39;;4463:38;4497:2;4486:9;4482:18;4463:38;:::i;:::-;4453:48;;4520:38;4554:2;4543:9;4539:18;4520:38;:::i;:::-;4510:48;;4230:334;;;;;:::o;4569:179::-;4647:13;;4700:22;4689:34;;4679:45;;4669:73;;4738:1;4735;4728:12;4753:473;4856:6;4864;4872;4880;4888;4941:3;4929:9;4920:7;4916:23;4912:33;4909:53;;;4958:1;4955;4948:12;4909:53;4981:39;5010:9;4981:39;:::i;:::-;4971:49;;5060:2;5049:9;5045:18;5039:25;5029:35;;5104:2;5093:9;5089:18;5083:25;5073:35;;5148:2;5137:9;5133:18;5127:25;5117:35;;5171:49;5215:3;5204:9;5200:19;5171:49;:::i;:::-;5161:59;;4753:473;;;;;;;;:::o;5231:127::-;5292:10;5287:3;5283:20;5280:1;5273:31;5323:4;5320:1;5313:15;5347:4;5344:1;5337:15;5363:168;5403:7;5469:1;5465;5461:6;5457:14;5454:1;5451:21;5446:1;5439:9;5432:17;5428:45;5425:71;;;5476:18;;:::i;:::-;-1:-1:-1;5516:9:5;;5363:168::o;5536:217::-;5576:1;5602;5592:132;;5646:10;5641:3;5637:20;5634:1;5627:31;5681:4;5678:1;5671:15;5709:4;5706:1;5699:15;5592:132;-1:-1:-1;5738:9:5;;5536:217::o;5758:128::-;5825:9;;;5846:11;;;5843:37;;;5860:18;;:::i;:::-;5758:128;;;;:::o;5891:127::-;5952:10;5947:3;5943:20;5940:1;5933:31;5983:4;5980:1;5973:15;6007:4;6004:1;5997:15;6023:418;6225:2;6207:21;;;6264:2;6244:18;;;6237:30;6303:34;6298:2;6283:18;;6276:62;-1:-1:-1;;;6369:2:5;6354:18;;6347:52;6431:3;6416:19;;6023:418::o;6446:423::-;6488:3;6526:5;6520:12;6553:6;6548:3;6541:19;6578:1;6588:162;6602:6;6599:1;6596:13;6588:162;;;6664:4;6720:13;;;6716:22;;6710:29;6692:11;;;6688:20;;6681:59;6617:12;6588:162;;;6592:3;6795:1;6788:4;6779:6;6774:3;6770:16;6766:27;6759:38;6858:4;6851:2;6847:7;6842:2;6834:6;6830:15;6826:29;6821:3;6817:39;6813:50;6806:57;;;6446:423;;;;:::o;6874:1137::-;7291:3;7280:9;7273:22;7254:4;7318:46;7359:3;7348:9;7344:19;7336:6;7318:46;:::i;:::-;7412:9;7404:6;7400:22;7395:2;7384:9;7380:18;7373:50;7446:33;7472:6;7464;7446:33;:::i;:::-;7432:47;;7527:9;7519:6;7515:22;7510:2;7499:9;7495:18;7488:50;7561:33;7587:6;7579;7561:33;:::i;:::-;-1:-1:-1;;;;;7630:32:5;;7625:2;7610:18;;7603:60;7700:22;;;7694:3;7679:19;;7672:51;7547:47;-1:-1:-1;7746:33:5;7547:47;7764:6;7746:33;:::i;:::-;7732:47;;7828:9;7820:6;7816:22;7810:3;7799:9;7795:19;7788:51;7862:33;7888:6;7880;7862:33;:::i;:::-;7848:47;;7944:9;7936:6;7932:22;7926:3;7915:9;7911:19;7904:51;7972:33;7998:6;7990;7972:33;:::i;:::-;7964:41;6874:1137;-1:-1:-1;;;;;;;;;;6874:1137:5:o;8423:135::-;8462:3;8483:17;;;8480:43;;8503:18;;:::i;:::-;-1:-1:-1;8550:1:5;8539:13;;8423:135::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    218,
    5025
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH3 0xD2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH3 0x89 JUMPI DUP1 PUSH4 0xE0DD8CE9 GT PUSH3 0x60 JUMPI DUP1 PUSH4 0xE0DD8CE9 EQ PUSH3 0x216 JUMPI DUP1 PUSH4 0xE1746B97 EQ PUSH3 0x22D JUMPI DUP1 PUSH4 0xE2041F94 EQ PUSH3 0x252 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH3 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x18F JUMPI DUP1 PUSH4 0xA3D565A5 EQ PUSH3 0x1C3 JUMPI DUP1 PUSH4 0xCADA8BFE EQ PUSH3 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2045CF32 EQ PUSH3 0xD7 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH3 0x114 JUMPI DUP1 PUSH4 0x4CD370B9 EQ PUSH3 0x120 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x147 JUMPI DUP1 PUSH4 0x81B2D07B EQ PUSH3 0x15F JUMPI DUP1 PUSH4 0x88AB139A EQ PUSH3 0x177 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xFC PUSH3 0xF6 CALLDATASIZE PUSH1 0x4 PUSH3 0x961 JUMP JUMPDEST PUSH3 0x28E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x10B SWAP2 SWAP1 PUSH3 0x986 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x11E PUSH3 0x306 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x138 PUSH3 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x10B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x154 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x11E PUSH3 0x3FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x138 PUSH3 0x414 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x138 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x10B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1E8 PUSH3 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH3 0x961 JUMP JUMPDEST PUSH3 0x425 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH3 0x10B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1AA PUSH3 0x44F JUMP JUMPDEST PUSH3 0x11E PUSH3 0x227 CALLDATASIZE PUSH1 0x4 PUSH3 0xA80 JUMP JUMPDEST PUSH3 0x4A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1AA PUSH3 0x24C CALLDATASIZE PUSH1 0x4 PUSH3 0xB9C JUMP JUMPDEST PUSH3 0x599 JUMP JUMPDEST PUSH3 0x11E PUSH3 0x263 CALLDATASIZE PUSH1 0x4 PUSH3 0xBC9 JUMP JUMPDEST PUSH3 0x5D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH3 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x11E PUSH3 0x288 CALLDATASIZE PUSH1 0x4 PUSH3 0x961 JUMP JUMPDEST PUSH3 0x7D9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH3 0x2FA JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0x2DB JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x310 PUSH3 0x855 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH3 0x33D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP4 DUP5 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH4 0xFEAF968C SWAP3 DUP2 DUP4 ADD SWAP3 PUSH1 0xA0 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x38A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x3B0 SWAP2 SWAP1 PUSH3 0xC2E JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP2 PUSH5 0x2540BE400 PUSH3 0x3CB SWAP2 SWAP1 PUSH3 0xC99 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH3 0x3E8 SWAP2 SWAP1 PUSH3 0xC99 JUMP JUMPDEST PUSH3 0x3F4 SWAP2 SWAP1 PUSH3 0xCBB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH3 0x406 PUSH3 0x855 JUMP JUMPDEST PUSH3 0x412 PUSH1 0x0 PUSH3 0x8B1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH3 0x420 PUSH3 0x855 JUMP JUMPDEST POP SELFBALANCE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0x432 PUSH3 0x855 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 PUSH3 0x442 DUP6 PUSH3 0x28E JUMP JUMPDEST MLOAD SWAP2 SWAP4 POP SWAP1 SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x45B PUSH3 0x855 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH3 0x46F SWAP1 PUSH1 0x1 SWAP1 PUSH3 0xCDE JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x487 JUMPI PUSH3 0x487 PUSH3 0xCFA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH3 0x4AC PUSH3 0x340 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH3 0x4D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4CE SWAP1 PUSH3 0xD10 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH3 0x4EE SWAP1 PUSH3 0x901 JUMP JUMPDEST PUSH3 0x500 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xDAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x51D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD SWAP1 SWAP3 SSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP4 DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP5 DUP6 ADD DUP2 SSTORE DUP3 MSTORE SWAP1 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ PUSH3 0x63B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520417265204E6F74204F776E6572204F66205468697320436572746966 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x696361746521 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x4CE JUMP JUMPDEST PUSH3 0x645 PUSH3 0x340 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH3 0x667 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x4CE SWAP1 PUSH3 0xD10 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x674 DUP5 PUSH3 0x28E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP3 POP PUSH3 0x69B SWAP2 SWAP1 PUSH3 0x90F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x7D2 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x6C7 JUMPI PUSH3 0x6C7 PUSH3 0xCFA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH3 0x71C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE DUP4 MSTORE SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH3 0x73B JUMPI PUSH3 0x73B PUSH3 0xCFA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x7BD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH3 0x781 JUMPI PUSH3 0x781 PUSH3 0xCFA JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP1 PUSH3 0x7C9 DUP2 PUSH3 0xE4C JUMP JUMPDEST SWAP2 POP POP PUSH3 0x69E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH3 0x7E3 PUSH3 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x84A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x4CE JUMP JUMPDEST PUSH3 0x33D DUP2 PUSH3 0x8B1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x412 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x4CE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xC3B DUP1 PUSH3 0xE69 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH3 0x33D SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x940 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x92A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x95C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x974 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x97F DUP3 PUSH3 0x944 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x9C9 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH3 0x9A2 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x9FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0xA1B JUMPI PUSH3 0xA1B PUSH3 0x9D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xA46 JUMPI PUSH3 0xA46 PUSH3 0x9D5 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xA60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0xA9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0xAB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xAC3 DUP12 DUP4 DUP13 ADD PUSH3 0x9EB JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0xADA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xAE8 DUP12 DUP4 DUP13 ADD PUSH3 0x9EB JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0xAFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xB0D DUP12 DUP4 DUP13 ADD PUSH3 0x9EB JUMP JUMPDEST SWAP7 POP PUSH3 0xB1D PUSH1 0x60 DUP12 ADD PUSH3 0x944 JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0xB34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xB42 DUP12 DUP4 DUP13 ADD PUSH3 0x9EB JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0xB59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xB67 DUP12 DUP4 DUP13 ADD PUSH3 0x9EB JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0xB7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xB8D DUP11 DUP3 DUP12 ADD PUSH3 0x9EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xBB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xBBB DUP4 PUSH3 0x944 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0xBDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xBEA DUP5 PUSH3 0x944 JUMP JUMPDEST SWAP3 POP PUSH3 0xBFA PUSH1 0x20 DUP6 ADD PUSH3 0x944 JUMP JUMPDEST SWAP2 POP PUSH3 0xC0A PUSH1 0x40 DUP6 ADD PUSH3 0x944 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH3 0x95C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0xC47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xC52 DUP7 PUSH3 0xC13 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH3 0xC77 PUSH1 0x80 DUP8 ADD PUSH3 0xC13 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0xCB6 JUMPI PUSH3 0xCB6 PUSH3 0xC83 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0xCD9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH3 0xCF4 JUMPI PUSH3 0xCF4 PUSH3 0xC83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x36 SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420456E6F756768204554482C20796F75206861766520746F2070617920 PUSH1 0x40 DUP3 ADD MSTORE PUSH22 0x746F2063726561746520636572746966696361746521 PUSH1 0x50 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0xD8E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0xD70 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE PUSH1 0x0 PUSH3 0xDC3 PUSH1 0xE0 DUP4 ADD DUP11 PUSH3 0xD66 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0xDD7 DUP2 DUP11 PUSH3 0xD66 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH3 0xDED DUP2 DUP10 PUSH3 0xD66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x60 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0x80 DUP6 ADD MSTORE SWAP1 POP PUSH3 0xE12 DUP2 DUP8 PUSH3 0xD66 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH3 0xE28 DUP2 DUP7 PUSH3 0xD66 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0xC0 DUP5 ADD MSTORE PUSH3 0xE3E DUP2 DUP6 PUSH3 0xD66 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH3 0xE61 JUMPI PUSH3 0xE61 PUSH3 0xC83 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xC3B CODESIZE SUB DUP1 PUSH3 0xC3B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x29F JUMP JUMPDEST PUSH3 0x3F CALLER PUSH3 0x16D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD PUSH1 0x7 SWAP1 SWAP2 MUL PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SWAP1 DUP2 SWAP1 PUSH3 0xC4 SWAP1 DUP3 PUSH3 0x449 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH3 0xDB SWAP1 DUP3 PUSH3 0x449 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH3 0xF2 SWAP1 DUP3 PUSH3 0x449 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP3 ADD SWAP1 PUSH3 0x12F SWAP1 DUP3 PUSH3 0x449 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP3 ADD SWAP1 PUSH3 0x146 SWAP1 DUP3 PUSH3 0x449 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH1 0x6 DUP3 ADD SWAP1 PUSH3 0x15D SWAP1 DUP3 PUSH3 0x449 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH3 0x515 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x202 JUMPI PUSH3 0x202 PUSH3 0x1BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x22D JUMPI PUSH3 0x22D PUSH3 0x1BD JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x26E JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x24F JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x2BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2E1 DUP12 DUP4 DUP13 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x306 DUP12 DUP4 DUP13 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP8 POP PUSH1 0x40 DUP11 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x32B DUP12 DUP4 DUP13 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP7 POP PUSH3 0x33B PUSH1 0x60 DUP12 ADD PUSH3 0x282 JUMP JUMPDEST SWAP6 POP PUSH1 0x80 DUP11 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x360 DUP12 DUP4 DUP13 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP11 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x385 DUP12 DUP4 DUP13 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP4 POP PUSH1 0xC0 DUP11 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3AB DUP11 DUP3 DUP12 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x3CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x444 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x41F JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x440 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x42B JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x465 JUMPI PUSH3 0x465 PUSH3 0x1BD JUMP JUMPDEST PUSH3 0x47D DUP2 PUSH3 0x476 DUP5 SLOAD PUSH3 0x3BA JUMP JUMPDEST DUP5 PUSH3 0x3F6 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4B5 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x49C JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x440 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x4E6 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x4C5 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x505 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x716 DUP1 PUSH3 0x525 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x365B98B2 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x585 JUMP JUMPDEST PUSH2 0xB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH2 0x449 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x77 JUMP JUMPDEST PUSH2 0x88 PUSH2 0xB3 CALLDATASIZE PUSH1 0x4 PUSH2 0x676 JUMP JUMPDEST PUSH2 0x45D JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD DUP1 SLOAD PUSH2 0xEB SWAP1 PUSH2 0x6A6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x117 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x164 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x139 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x164 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x147 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x179 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1A5 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x207 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x233 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x280 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x255 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x280 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x263 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD DUP1 SLOAD SWAP5 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP5 SWAP2 SWAP4 POP SWAP2 POP PUSH2 0x2AA SWAP1 PUSH2 0x6A6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D6 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x323 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x323 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x306 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x5 ADD DUP1 SLOAD PUSH2 0x338 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x364 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x386 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x394 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x6 ADD DUP1 SLOAD PUSH2 0x3C6 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3F2 SWAP1 PUSH2 0x6A6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x43F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x414 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x43F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x422 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP8 JUMP JUMPDEST PUSH2 0x451 PUSH2 0x4DB JUMP JUMPDEST PUSH2 0x45B PUSH1 0x0 PUSH2 0x535 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x465 PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D8 DUP2 PUSH2 0x535 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x45B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x5A8 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x5F7 PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x59E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x609 DUP2 DUP11 PUSH2 0x59E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x61D DUP2 DUP10 PUSH2 0x59E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x60 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0x80 DUP6 ADD MSTORE SWAP1 POP PUSH2 0x640 DUP2 DUP8 PUSH2 0x59E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x654 DUP2 DUP7 PUSH2 0x59E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0xC0 DUP5 ADD MSTORE PUSH2 0x668 DUP2 DUP6 PUSH2 0x59E JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x688 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x69F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x6BA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6DA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0xEB SWAP9 PUSH26 0x991A2DF0966991C762AA9A8871B5405DEA8D98E914796FA32785 NOT JUMP PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0xA4CF5A3800A11A69A55CB81DA23FFC38DE6808073FBF514FF888B 0xA5 0x2E 0xD0 PUSH1 0x64 PUSH20 0x6F6C634300081000330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        218,
        5025
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "LT",
      "path": "4"
    },
    "9": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xD2"
    },
    "13": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "14": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "16": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "19": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "SHR",
      "path": "4"
    },
    "20": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "DUP1",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8DA5CB5B"
    },
    "26": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "GT",
      "path": "4"
    },
    "27": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x89"
    },
    "31": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE0DD8CE9"
    },
    "38": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x60"
    },
    "43": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "DUP1",
      "path": "4"
    },
    "45": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE0DD8CE9"
    },
    "50": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "EQ",
      "path": "4"
    },
    "51": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x216"
    },
    "55": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "56": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "DUP1",
      "path": "4"
    },
    "57": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE1746B97"
    },
    "62": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "EQ",
      "path": "4"
    },
    "63": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x22D"
    },
    "67": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "68": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "DUP1",
      "path": "4"
    },
    "69": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE2041F94"
    },
    "74": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "EQ",
      "path": "4"
    },
    "75": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x252"
    },
    "79": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "80": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "DUP1",
      "path": "4"
    },
    "81": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF2FDE38B"
    },
    "86": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "EQ",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x269"
    },
    "91": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "92": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "94": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "DUP1",
      "path": "4"
    },
    "95": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "REVERT",
      "path": "4"
    },
    "96": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "97": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "DUP1",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8DA5CB5B"
    },
    "103": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "EQ",
      "path": "4"
    },
    "104": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x18F"
    },
    "108": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "109": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "DUP1",
      "path": "4"
    },
    "110": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA3D565A5"
    },
    "115": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "EQ",
      "path": "4"
    },
    "116": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x1C3"
    },
    "120": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "121": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "DUP1",
      "path": "4"
    },
    "122": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xCADA8BFE"
    },
    "127": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "EQ",
      "path": "4"
    },
    "128": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x1FE"
    },
    "132": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "133": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "135": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "DUP1",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "REVERT",
      "path": "4"
    },
    "137": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "138": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "DUP1",
      "path": "4"
    },
    "139": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x2045CF32"
    },
    "144": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "EQ",
      "path": "4"
    },
    "145": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xD7"
    },
    "149": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "150": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "DUP1",
      "path": "4"
    },
    "151": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x3CCFD60B"
    },
    "156": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "EQ",
      "path": "4"
    },
    "157": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x114"
    },
    "161": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "162": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "DUP1",
      "path": "4"
    },
    "163": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x4CD370B9"
    },
    "168": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "EQ",
      "path": "4"
    },
    "169": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x120"
    },
    "173": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "174": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "DUP1",
      "path": "4"
    },
    "175": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x715018A6"
    },
    "180": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "EQ",
      "path": "4"
    },
    "181": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x147"
    },
    "185": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "186": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "DUP1",
      "path": "4"
    },
    "187": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x81B2D07B"
    },
    "192": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "EQ",
      "path": "4"
    },
    "193": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x15F"
    },
    "197": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "198": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "DUP1",
      "path": "4"
    },
    "199": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x88AB139A"
    },
    "204": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "EQ",
      "path": "4"
    },
    "205": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x177"
    },
    "209": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "210": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "211": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "213": {
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "DUP1",
      "path": "4"
    },
    "214": {
      "first_revert": true,
      "fn": null,
      "offset": [
        218,
        5025
      ],
      "op": "REVERT",
      "path": "4"
    },
    "215": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "216": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "217": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "DUP1",
      "path": "4"
    },
    "218": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "219": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xE4"
    },
    "223": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "224": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "226": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "DUP1",
      "path": "4"
    },
    "227": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "REVERT",
      "path": "4"
    },
    "228": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "229": {
      "op": "POP"
    },
    "230": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xFC"
    },
    "234": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xF6"
    },
    "238": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "239": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "241": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x961"
    },
    "245": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "jump": "i",
      "offset": [
        2324,
        2499
      ],
      "op": "JUMP",
      "path": "4"
    },
    "246": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "247": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x28E"
    },
    "251": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "jump": "i",
      "offset": [
        2324,
        2499
      ],
      "op": "JUMP",
      "path": "4"
    },
    "252": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "253": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "255": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "256": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x10B"
    },
    "260": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "261": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "262": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x986"
    },
    "266": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "jump": "i",
      "offset": [
        2324,
        2499
      ],
      "op": "JUMP",
      "path": "4"
    },
    "267": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "268": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "270": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "271": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "DUP1",
      "path": "4"
    },
    "272": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "273": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "SUB",
      "path": "4"
    },
    "274": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "275": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "RETURN",
      "path": "4"
    },
    "276": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3521,
        3634
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "277": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3521,
        3634
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x11E"
    },
    "281": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3521,
        3634
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x306"
    },
    "285": {
      "fn": "CopyRightLockCreator.withdraw",
      "jump": "i",
      "offset": [
        3521,
        3634
      ],
      "op": "JUMP",
      "path": "4"
    },
    "286": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3521,
        3634
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "287": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3521,
        3634
      ],
      "op": "STOP",
      "path": "4"
    },
    "288": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2609,
        3208
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "289": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2609,
        3208
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "290": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2609,
        3208
      ],
      "op": "DUP1",
      "path": "4"
    },
    "291": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2609,
        3208
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "292": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2609,
        3208
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x12D"
    },
    "296": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2609,
        3208
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "297": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2609,
        3208
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "299": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2609,
        3208
      ],
      "op": "DUP1",
      "path": "4"
    },
    "300": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2609,
        3208
      ],
      "op": "REVERT",
      "path": "4"
    },
    "301": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2609,
        3208
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "302": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2609,
        3208
      ],
      "op": "POP",
      "path": "4"
    },
    "303": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2609,
        3208
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x138"
    },
    "307": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2609,
        3208
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x340"
    },
    "311": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "jump": "i",
      "offset": [
        2609,
        3208
      ],
      "op": "JUMP",
      "path": "4"
    },
    "312": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2609,
        3208
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "313": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2609,
        3208
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "315": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2609,
        3208
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "316": {
      "op": "SWAP1"
    },
    "317": {
      "op": "DUP2"
    },
    "318": {
      "op": "MSTORE"
    },
    "319": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "321": {
      "op": "ADD"
    },
    "322": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2609,
        3208
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x10B"
    },
    "326": {
      "op": "JUMP"
    },
    "327": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "328": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "329": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "DUP1",
      "path": "0"
    },
    "330": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "331": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x154"
    },
    "335": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "336": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "338": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "DUP1",
      "path": "0"
    },
    "339": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "REVERT",
      "path": "0"
    },
    "340": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "341": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "POP",
      "path": "0"
    },
    "342": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x11E"
    },
    "346": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x3FC"
    },
    "350": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "351": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        3258,
        3407
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "352": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        3258,
        3407
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "353": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        3258,
        3407
      ],
      "op": "DUP1",
      "path": "4"
    },
    "354": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        3258,
        3407
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "355": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        3258,
        3407
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x16C"
    },
    "359": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        3258,
        3407
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "360": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        3258,
        3407
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "362": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        3258,
        3407
      ],
      "op": "DUP1",
      "path": "4"
    },
    "363": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        3258,
        3407
      ],
      "op": "REVERT",
      "path": "4"
    },
    "364": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        3258,
        3407
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "365": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        3258,
        3407
      ],
      "op": "POP",
      "path": "4"
    },
    "366": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        3258,
        3407
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x138"
    },
    "370": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        3258,
        3407
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x414"
    },
    "374": {
      "fn": "CopyRightLockCreator.showBalance",
      "jump": "i",
      "offset": [
        3258,
        3407
      ],
      "op": "JUMP",
      "path": "4"
    },
    "375": {
      "offset": [
        385,
        411
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "376": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        385,
        411
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "377": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        385,
        411
      ],
      "op": "DUP1",
      "path": "4"
    },
    "378": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        385,
        411
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "379": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        385,
        411
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x184"
    },
    "383": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        385,
        411
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "384": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        385,
        411
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "386": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        385,
        411
      ],
      "op": "DUP1",
      "path": "4"
    },
    "387": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        385,
        411
      ],
      "op": "REVERT",
      "path": "4"
    },
    "388": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        385,
        411
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "389": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        385,
        411
      ],
      "op": "POP",
      "path": "4"
    },
    "390": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        385,
        411
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x138"
    },
    "394": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        385,
        411
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "396": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        385,
        411
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "397": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        385,
        411
      ],
      "op": "DUP2",
      "path": "4"
    },
    "398": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        385,
        411
      ],
      "op": "JUMP",
      "path": "4"
    },
    "399": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "400": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "401": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "402": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "403": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x19C"
    },
    "407": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "408": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "410": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "411": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "REVERT",
      "path": "0"
    },
    "412": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "413": {
      "op": "POP"
    },
    "414": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "416": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "421": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "423": {
      "op": "SHL"
    },
    "424": {
      "op": "SUB"
    },
    "425": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "426": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "427": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "429": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "436": {
      "op": "SHL"
    },
    "437": {
      "op": "SUB"
    },
    "438": {
      "op": "SWAP1"
    },
    "439": {
      "op": "SWAP2"
    },
    "440": {
      "op": "AND"
    },
    "441": {
      "op": "DUP2"
    },
    "442": {
      "op": "MSTORE"
    },
    "443": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "445": {
      "op": "ADD"
    },
    "446": {
      "fn": "Ownable.owner",
      "offset": [
        1201,
        1286
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x10B"
    },
    "450": {
      "op": "JUMP"
    },
    "451": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "452": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "453": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "DUP1",
      "path": "4"
    },
    "454": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "455": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x1D0"
    },
    "459": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "460": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "462": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "DUP1",
      "path": "4"
    },
    "463": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "REVERT",
      "path": "4"
    },
    "464": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "465": {
      "op": "POP"
    },
    "466": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x1E8"
    },
    "470": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x1E2"
    },
    "474": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "475": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "477": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x961"
    },
    "481": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "jump": "i",
      "offset": [
        3688,
        3997
      ],
      "op": "JUMP",
      "path": "4"
    },
    "482": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "483": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x425"
    },
    "487": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "jump": "i",
      "offset": [
        3688,
        3997
      ],
      "op": "JUMP",
      "path": "4"
    },
    "488": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "489": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "491": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "DUP1",
      "path": "4"
    },
    "492": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "493": {
      "op": "SWAP3"
    },
    "494": {
      "op": "DUP4"
    },
    "495": {
      "op": "MSTORE"
    },
    "496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "498": {
      "op": "DUP4"
    },
    "499": {
      "op": "ADD"
    },
    "500": {
      "op": "SWAP2"
    },
    "501": {
      "op": "SWAP1"
    },
    "502": {
      "op": "SWAP2"
    },
    "503": {
      "op": "MSTORE"
    },
    "504": {
      "op": "ADD"
    },
    "505": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x10B"
    },
    "509": {
      "op": "JUMP"
    },
    "510": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2029,
        2232
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "511": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2029,
        2232
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "512": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2029,
        2232
      ],
      "op": "DUP1",
      "path": "4"
    },
    "513": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2029,
        2232
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "514": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2029,
        2232
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x20B"
    },
    "518": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2029,
        2232
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "519": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2029,
        2232
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "521": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2029,
        2232
      ],
      "op": "DUP1",
      "path": "4"
    },
    "522": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2029,
        2232
      ],
      "op": "REVERT",
      "path": "4"
    },
    "523": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2029,
        2232
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "524": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2029,
        2232
      ],
      "op": "POP",
      "path": "4"
    },
    "525": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2029,
        2232
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x1AA"
    },
    "529": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2029,
        2232
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x44F"
    },
    "533": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "jump": "i",
      "offset": [
        2029,
        2232
      ],
      "op": "JUMP",
      "path": "4"
    },
    "534": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        769,
        1972
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "535": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        769,
        1972
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x11E"
    },
    "539": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        769,
        1972
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x227"
    },
    "543": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        769,
        1972
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "544": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        769,
        1972
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "546": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        769,
        1972
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xA80"
    },
    "550": {
      "fn": "CopyRightLockCreator.addCertificate",
      "jump": "i",
      "offset": [
        769,
        1972
      ],
      "op": "JUMP",
      "path": "4"
    },
    "551": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        769,
        1972
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "552": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        769,
        1972
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x4A2"
    },
    "556": {
      "fn": "CopyRightLockCreator.addCertificate",
      "jump": "i",
      "offset": [
        769,
        1972
      ],
      "op": "JUMP",
      "path": "4"
    },
    "557": {
      "offset": [
        270,
        324
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "558": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "559": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "DUP1",
      "path": "4"
    },
    "560": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "561": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x23A"
    },
    "565": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "566": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "568": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "DUP1",
      "path": "4"
    },
    "569": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "REVERT",
      "path": "4"
    },
    "570": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "571": {
      "op": "POP"
    },
    "572": {
      "offset": [
        270,
        324
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x1AA"
    },
    "576": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x24C"
    },
    "580": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "581": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "583": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xB9C"
    },
    "587": {
      "fn": "CopyRightLockCreator.addCertificate",
      "jump": "i",
      "offset": [
        270,
        324
      ],
      "op": "JUMP",
      "path": "4"
    },
    "588": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "589": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x599"
    },
    "593": {
      "fn": "CopyRightLockCreator.addCertificate",
      "jump": "i",
      "offset": [
        270,
        324
      ],
      "op": "JUMP",
      "path": "4"
    },
    "594": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4054,
        5023
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "595": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4054,
        5023
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x11E"
    },
    "599": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4054,
        5023
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x263"
    },
    "603": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4054,
        5023
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "604": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4054,
        5023
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "606": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4054,
        5023
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xBC9"
    },
    "610": {
      "fn": "CopyRightLockCreator.transOwnership",
      "jump": "i",
      "offset": [
        4054,
        5023
      ],
      "op": "JUMP",
      "path": "4"
    },
    "611": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4054,
        5023
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "612": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4054,
        5023
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x5D2"
    },
    "616": {
      "fn": "CopyRightLockCreator.transOwnership",
      "jump": "i",
      "offset": [
        4054,
        5023
      ],
      "op": "JUMP",
      "path": "4"
    },
    "617": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "618": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "619": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "DUP1",
      "path": "0"
    },
    "620": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "621": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x276"
    },
    "625": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "626": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "628": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "DUP1",
      "path": "0"
    },
    "629": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "REVERT",
      "path": "0"
    },
    "630": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x11E"
    },
    "636": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x288"
    },
    "640": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "641": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "643": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x961"
    },
    "647": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "648": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "649": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x7D9"
    },
    "653": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMP",
      "path": "0"
    },
    "654": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "659": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "661": {
      "op": "SHL"
    },
    "662": {
      "op": "SUB"
    },
    "663": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2461,
        2492
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 1
    },
    "664": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2461,
        2492
      ],
      "op": "AND",
      "path": "4"
    },
    "665": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2461,
        2492
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "667": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2461,
        2492
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "668": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2461,
        2492
      ],
      "op": "DUP2",
      "path": "4"
    },
    "669": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2461,
        2492
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "670": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2461,
        2478
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "672": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2461,
        2492
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "674": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2461,
        2492
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "675": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2461,
        2492
      ],
      "op": "DUP2",
      "path": "4"
    },
    "676": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2461,
        2492
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "677": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2461,
        2492
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "679": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2461,
        2492
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "680": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2461,
        2492
      ],
      "op": "DUP3",
      "path": "4"
    },
    "681": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2461,
        2492
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "682": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2461,
        2492
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "683": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "DUP1",
      "path": "4"
    },
    "684": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "685": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "DUP4",
      "path": "4"
    },
    "686": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "687": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "DUP2",
      "path": "4"
    },
    "688": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "DUP5",
      "path": "4"
    },
    "689": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "MUL",
      "path": "4"
    },
    "690": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "DUP2",
      "path": "4"
    },
    "691": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "ADD",
      "path": "4"
    },
    "692": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "DUP5",
      "path": "4"
    },
    "693": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "ADD",
      "path": "4"
    },
    "694": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "695": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "696": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "697": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "DUP1",
      "path": "4"
    },
    "698": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "DUP5",
      "path": "4"
    },
    "699": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "700": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2422,
        2438
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "702": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2422,
        2438
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "703": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "704": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "DUP4",
      "path": "4"
    },
    "705": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "ADD",
      "path": "4"
    },
    "706": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2461,
        2492
      ],
      "op": "DUP3",
      "path": "4"
    },
    "707": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "DUP3",
      "path": "4"
    },
    "708": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "DUP1",
      "path": "4"
    },
    "709": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "710": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x2FA"
    },
    "714": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "715": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "717": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "MUL",
      "path": "4"
    },
    "718": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "DUP3",
      "path": "4"
    },
    "719": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "ADD",
      "path": "4"
    },
    "720": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "721": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "722": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "724": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "725": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "727": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "729": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "730": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "731": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "732": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "DUP2",
      "path": "4"
    },
    "733": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "740": {
      "op": "SHL"
    },
    "741": {
      "op": "SUB"
    },
    "742": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "AND",
      "path": "4"
    },
    "743": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "DUP2",
      "path": "4"
    },
    "744": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "745": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "747": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "748": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "749": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "ADD",
      "path": "4"
    },
    "750": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "751": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "753": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "ADD",
      "path": "4"
    },
    "754": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "DUP1",
      "path": "4"
    },
    "755": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "DUP4",
      "path": "4"
    },
    "756": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "GT",
      "path": "4"
    },
    "757": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x2DB"
    },
    "761": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "762": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "763": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "POP",
      "path": "4"
    },
    "764": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "POP",
      "path": "4"
    },
    "765": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "POP",
      "path": "4"
    },
    "766": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "POP",
      "path": "4"
    },
    "767": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "POP",
      "path": "4"
    },
    "768": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "769": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2454,
        2492
      ],
      "op": "POP",
      "path": "4"
    },
    "770": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "771": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "772": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "offset": [
        2324,
        2499
      ],
      "op": "POP",
      "path": "4"
    },
    "773": {
      "fn": "CopyRightLockCreator.getCertificatesYouOwn",
      "jump": "o",
      "offset": [
        2324,
        2499
      ],
      "op": "JUMP",
      "path": "4"
    },
    "774": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3521,
        3634
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "775": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x310"
    },
    "779": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x855"
    },
    "783": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "784": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "785": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 2,
      "value": "0x40"
    },
    "787": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "788": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3584,
        3594
      ],
      "op": "CALLER",
      "path": "4"
    },
    "789": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3584,
        3594
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "790": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3605,
        3626
      ],
      "op": "SELFBALANCE",
      "path": "4"
    },
    "791": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "DUP1",
      "path": "4"
    },
    "792": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "793": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8FC"
    },
    "796": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "MUL",
      "path": "4"
    },
    "797": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "798": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "800": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "DUP2",
      "path": "4"
    },
    "801": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "DUP2",
      "path": "4"
    },
    "802": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "DUP2",
      "path": "4"
    },
    "803": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3605,
        3626
      ],
      "op": "DUP6",
      "path": "4"
    },
    "804": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3584,
        3594
      ],
      "op": "DUP9",
      "path": "4"
    },
    "805": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "DUP9",
      "path": "4"
    },
    "806": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "CALL",
      "path": "4"
    },
    "807": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "808": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "POP",
      "path": "4"
    },
    "809": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "POP",
      "path": "4"
    },
    "810": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "POP",
      "path": "4"
    },
    "811": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "POP",
      "path": "4"
    },
    "812": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "813": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "DUP1",
      "path": "4"
    },
    "814": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "815": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x33D"
    },
    "819": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "820": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "821": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "823": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "DUP1",
      "path": "4"
    },
    "824": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "825": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "826": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "828": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "REVERT",
      "path": "4"
    },
    "829": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "830": {
      "fn": "CopyRightLockCreator.withdraw",
      "offset": [
        3576,
        3627
      ],
      "op": "POP",
      "path": "4"
    },
    "831": {
      "fn": "CopyRightLockCreator.withdraw",
      "jump": "o",
      "offset": [
        3521,
        3634
      ],
      "op": "JUMP",
      "path": "4"
    },
    "832": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2609,
        3208
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "833": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2714
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "835": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2714
      ],
      "op": "DUP1",
      "path": "4"
    },
    "836": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2714
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "837": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "839": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "DUP1",
      "path": "4"
    },
    "840": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "841": {
      "op": "PUSH4",
      "value": "0x3FABE5A3"
    },
    "846": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "848": {
      "op": "SHL"
    },
    "849": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "DUP2",
      "path": "4"
    },
    "850": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "851": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "852": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "853": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2655,
        2662
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "855": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2655,
        2662
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "856": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2655,
        2662
      ],
      "op": "DUP5",
      "path": "4"
    },
    "857": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2655,
        2662
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "864": {
      "op": "SHL"
    },
    "865": {
      "op": "SUB"
    },
    "866": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2714
      ],
      "op": "AND",
      "path": "4"
    },
    "867": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2714
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "868": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2730
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFEAF968C"
    },
    "873": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2730
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "874": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "DUP2",
      "path": "4"
    },
    "875": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "DUP4",
      "path": "4"
    },
    "876": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "ADD",
      "path": "4"
    },
    "877": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "878": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA0"
    },
    "880": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "881": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "DUP3",
      "path": "4"
    },
    "882": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "883": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "SUB",
      "path": "4"
    },
    "884": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "ADD",
      "path": "4"
    },
    "885": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "DUP2",
      "path": "4"
    },
    "886": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2714
      ],
      "op": "DUP7",
      "path": "4"
    },
    "887": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "GAS",
      "path": "4"
    },
    "888": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "889": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "890": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "DUP1",
      "path": "4"
    },
    "891": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "892": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x38A"
    },
    "896": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "897": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "898": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "900": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "DUP1",
      "path": "4"
    },
    "901": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "902": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "903": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "905": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "REVERT",
      "path": "4"
    },
    "906": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "907": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "POP",
      "path": "4"
    },
    "908": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "POP",
      "path": "4"
    },
    "909": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "POP",
      "path": "4"
    },
    "910": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "POP",
      "path": "4"
    },
    "911": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "913": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "914": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "915": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "917": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "NOT",
      "path": "4"
    },
    "918": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "920": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "DUP3",
      "path": "4"
    },
    "921": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "ADD",
      "path": "4"
    },
    "922": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "AND",
      "path": "4"
    },
    "923": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "DUP3",
      "path": "4"
    },
    "924": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "ADD",
      "path": "4"
    },
    "925": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "DUP1",
      "path": "4"
    },
    "926": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "928": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "929": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "POP",
      "path": "4"
    },
    "930": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "DUP2",
      "path": "4"
    },
    "931": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "ADD",
      "path": "4"
    },
    "932": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "933": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x3B0"
    },
    "937": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "938": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "939": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xC2E"
    },
    "943": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "jump": "i",
      "offset": [
        2699,
        2732
      ],
      "op": "JUMP",
      "path": "4"
    },
    "944": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2699,
        2732
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "945": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2674,
        2732
      ],
      "op": "POP",
      "path": "4"
    },
    "946": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2674,
        2732
      ],
      "op": "POP",
      "path": "4"
    },
    "947": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2674,
        2732
      ],
      "op": "POP",
      "path": "4"
    },
    "948": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2674,
        2732
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "949": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2674,
        2732
      ],
      "op": "POP",
      "path": "4"
    },
    "950": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2674,
        2732
      ],
      "op": "POP",
      "path": "4"
    },
    "951": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2790,
        2811
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "953": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2822,
        2827
      ],
      "op": "DUP2",
      "path": "4"
    },
    "954": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2831,
        2837
      ],
      "op": "PUSH5",
      "path": "4",
      "value": "0x2540BE400"
    },
    "960": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2814,
        2837
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x3CB"
    },
    "964": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2814,
        2837
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "965": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2814,
        2837
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "966": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2814,
        2837
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xC99"
    },
    "970": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "jump": "i",
      "offset": [
        2814,
        2837
      ],
      "op": "JUMP",
      "path": "4"
    },
    "971": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2814,
        2837
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "972": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2790,
        2837
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "973": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2790,
        2837
      ],
      "op": "POP",
      "path": "4"
    },
    "974": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2992,
        3011
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "976": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        3039,
        3052
      ],
      "op": "DUP2",
      "path": "4"
    },
    "977": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        3015,
        3026
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "979": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        3015,
        3026
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "980": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        3029,
        3035
      ],
      "op": "PUSH8",
      "path": "4",
      "value": "0xDE0B6B3A7640000"
    },
    "989": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        3015,
        3035
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x3E8"
    },
    "993": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        3015,
        3035
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "994": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        3015,
        3035
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "995": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        3015,
        3035
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xC99"
    },
    "999": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "jump": "i",
      "offset": [
        3015,
        3035
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1000": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        3015,
        3035
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1001": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        3014,
        3052
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x3F4"
    },
    "1005": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        3014,
        3052
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1006": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        3014,
        3052
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1007": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        3014,
        3052
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xCBB"
    },
    "1011": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "jump": "i",
      "offset": [
        3014,
        3052
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1012": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        3014,
        3052
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1013": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2992,
        3052
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1014": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "offset": [
        2609,
        3208
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1015": {
      "op": "POP"
    },
    "1016": {
      "op": "POP"
    },
    "1017": {
      "op": "POP"
    },
    "1018": {
      "op": "POP"
    },
    "1019": {
      "fn": "CopyRightLockCreator.getMinimumFee",
      "jump": "o",
      "offset": [
        2609,
        3208
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1020": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1021": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x406"
    },
    "1025": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x855"
    },
    "1029": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1030": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1031": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 3,
      "value": "0x412"
    },
    "1035": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1922,
        1923
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1037": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1913
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x8B1"
    },
    "1041": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1042": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1895,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1043": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1831,
        1932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1044": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        3258,
        3407
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1045": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        3312,
        3319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1047": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x420"
    },
    "1051": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x855"
    },
    "1055": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1056": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1057": {
      "op": "POP"
    },
    "1058": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        3352,
        3373
      ],
      "op": "SELFBALANCE",
      "path": "4"
    },
    "1059": {
      "fn": "CopyRightLockCreator.showBalance",
      "offset": [
        3258,
        3407
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1060": {
      "fn": "CopyRightLockCreator.showBalance",
      "jump": "o",
      "offset": [
        3258,
        3407
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1061": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1062": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3768,
        3772
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1064": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3774,
        3778
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1065": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x432"
    },
    "1069": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x855"
    },
    "1073": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1074": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1075": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3813,
        3837
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1077": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3813,
        3844
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1078": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3790,
        3810
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1080": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3887,
        3922
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x442"
    },
    "1084": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3909,
        3921
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1085": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3887,
        3908
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x28E"
    },
    "1089": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "jump": "i",
      "offset": [
        3887,
        3922
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1090": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3887,
        3922
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1091": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3887,
        3929
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1092": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3947,
        3962
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 4
    },
    "1093": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3947,
        3962
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1094": {
      "op": "POP"
    },
    "1095": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3887,
        3929
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1096": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3887,
        3929
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1097": {
      "op": "POP"
    },
    "1098": {
      "op": "POP"
    },
    "1099": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1100": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "POP",
      "path": "4"
    },
    "1101": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "offset": [
        3688,
        3997
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1102": {
      "fn": "CopyRightLockCreator.arrayLengthGetter",
      "jump": "o",
      "offset": [
        3688,
        3997
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1103": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2029,
        2232
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1104": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2090,
        2097
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1106": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x45B"
    },
    "1110": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x855"
    },
    "1114": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1115": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1116": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2129,
        2153
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1118": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2129,
        2160
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1119": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2109,
        2126
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1121": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2109,
        2126
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1122": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2129,
        2164
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x46F"
    },
    "1126": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2129,
        2164
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1127": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2163,
        2164
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1129": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2163,
        2164
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1130": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2129,
        2164
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xCDE"
    },
    "1134": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "jump": "i",
      "offset": [
        2129,
        2164
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1135": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2129,
        2164
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1136": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2109,
        2164
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1137": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2109,
        2164
      ],
      "op": "POP",
      "path": "4"
    },
    "1138": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2213
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 5,
      "value": "0x2"
    },
    "1140": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2214,
        2223
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1141": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1142": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1143": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1144": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "LT",
      "path": "4"
    },
    "1145": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x487"
    },
    "1149": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1150": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x487"
    },
    "1154": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xCFA"
    },
    "1158": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "jump": "i",
      "offset": [
        2189,
        2224
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1159": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1160": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1162": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1163": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1164": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1165": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1167": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1168": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1169": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1170": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "ADD",
      "path": "4"
    },
    "1171": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1178": {
      "op": "SHL"
    },
    "1179": {
      "op": "SUB"
    },
    "1180": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "AND",
      "path": "4"
    },
    "1181": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2189,
        2224
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1182": {
      "op": "POP"
    },
    "1183": {
      "op": "POP"
    },
    "1184": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "offset": [
        2029,
        2232
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1185": {
      "fn": "CopyRightLockCreator.getLastCertificate",
      "jump": "o",
      "offset": [
        2029,
        2232
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1186": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        769,
        1972
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1187": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1193,
        1208
      ],
      "op": "PUSH3",
      "path": "4",
      "statement": 6,
      "value": "0x4AC"
    },
    "1191": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1193,
        1206
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x340"
    },
    "1195": {
      "fn": "CopyRightLockCreator.addCertificate",
      "jump": "i",
      "offset": [
        1193,
        1208
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1196": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1193,
        1208
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1197": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1180,
        1189
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "1198": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1180,
        1208
      ],
      "op": "LT",
      "path": "4"
    },
    "1199": {
      "branch": 21,
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1180,
        1208
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1200": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1172,
        1267
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x4D7"
    },
    "1204": {
      "branch": 21,
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1172,
        1267
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1205": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1172,
        1267
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1207": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1172,
        1267
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1208": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1212": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1214": {
      "op": "SHL"
    },
    "1215": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1172,
        1267
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1216": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1172,
        1267
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1217": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1172,
        1267
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1219": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1172,
        1267
      ],
      "op": "ADD",
      "path": "4"
    },
    "1220": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1172,
        1267
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x4CE"
    },
    "1224": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1172,
        1267
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1225": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1172,
        1267
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xD10"
    },
    "1229": {
      "fn": "CopyRightLockCreator.addCertificate",
      "jump": "i",
      "offset": [
        1172,
        1267
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1230": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1172,
        1267
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1231": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1172,
        1267
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1233": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1172,
        1267
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1234": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1172,
        1267
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1235": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1172,
        1267
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1236": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1172,
        1267
      ],
      "op": "SUB",
      "path": "4"
    },
    "1237": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1172,
        1267
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1238": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1172,
        1267
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "1239": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1172,
        1267
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1240": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1277,
        1309
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1242": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1343,
        1355
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1243": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1369,
        1374
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1244": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1388,
        1394
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1245": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1408,
        1416
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1246": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1430,
        1435
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1247": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1449,
        1460
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1248": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1474,
        1479
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1249": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1251": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1252": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x4EE"
    },
    "1256": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1257": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x901"
    },
    "1261": {
      "fn": "CopyRightLockCreator.addCertificate",
      "jump": "i",
      "offset": [
        1312,
        1489
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1262": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1263": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x500"
    },
    "1267": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "SWAP8",
      "path": "4"
    },
    "1268": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "1269": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "1270": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1271": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1272": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1273": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1274": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1275": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xDAE"
    },
    "1279": {
      "fn": "CopyRightLockCreator.addCertificate",
      "jump": "i",
      "offset": [
        1312,
        1489
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1280": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1281": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1283": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1284": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1285": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1286": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "SUB",
      "path": "4"
    },
    "1287": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1288": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1290": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "CREATE",
      "path": "4"
    },
    "1291": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1292": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1293": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1294": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1295": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x51D"
    },
    "1299": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1300": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1301": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1303": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1304": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1305": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1306": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1308": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1309": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1312,
        1489
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1310": {
      "op": "POP"
    },
    "1311": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1644
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 7,
      "value": "0x2"
    },
    "1313": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1314": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1315": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1317": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1318": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1319": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "ADD",
      "path": "4"
    },
    "1320": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1321": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1322": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1323": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
    },
    "1356": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "ADD",
      "path": "4"
    },
    "1357": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1358": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1365": {
      "op": "SHL"
    },
    "1366": {
      "op": "SUB"
    },
    "1367": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1368": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1369": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "AND",
      "path": "4"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1376": {
      "op": "SHL"
    },
    "1377": {
      "op": "SUB"
    },
    "1378": {
      "op": "NOT"
    },
    "1379": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1380": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1381": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "AND",
      "path": "4"
    },
    "1382": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1383": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "OR",
      "path": "4"
    },
    "1384": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1385": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1386": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1387": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1846,
        1856
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 8
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1390": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1857
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1391": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1857
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1392": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1857
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1393": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1620,
        1669
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1395": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1857
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1396": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1857
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1397": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1857
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1398": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1857
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1400": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1857
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1401": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1857
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1402": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1403": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1404": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1405": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1406": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "ADD",
      "path": "4"
    },
    "1407": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1408": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1409": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1410": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1411": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1412": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1413": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1414": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1415": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "ADD",
      "path": "4"
    },
    "1416": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1417": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1418": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1419": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1420": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "AND",
      "path": "4"
    },
    "1421": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "OR",
      "path": "4"
    },
    "1422": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1423": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        1828,
        1891
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1424": {
      "op": "POP"
    },
    "1425": {
      "op": "POP"
    },
    "1426": {
      "op": "POP"
    },
    "1427": {
      "op": "POP"
    },
    "1428": {
      "op": "POP"
    },
    "1429": {
      "op": "POP"
    },
    "1430": {
      "op": "POP"
    },
    "1431": {
      "op": "POP"
    },
    "1432": {
      "fn": "CopyRightLockCreator.addCertificate",
      "jump": "o",
      "offset": [
        769,
        1972
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1433": {
      "offset": [
        270,
        324
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1434": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1436": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1438": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1439": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1440": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1442": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1443": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1445": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1447": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1448": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1449": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1450": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1451": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1452": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "LT",
      "path": "4"
    },
    "1453": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x5B6"
    },
    "1457": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1458": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1460": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1461": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1462": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1463": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1465": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1466": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1467": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1468": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1470": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1471": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1472": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1473": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "ADD",
      "path": "4"
    },
    "1474": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1481": {
      "op": "SHL"
    },
    "1482": {
      "op": "SUB"
    },
    "1483": {
      "offset": [
        270,
        324
      ],
      "op": "AND",
      "path": "4"
    },
    "1484": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1485": {
      "op": "POP"
    },
    "1486": {
      "offset": [
        270,
        324
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1487": {
      "fn": "CopyRightLockCreator.addCertificate",
      "offset": [
        270,
        324
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1488": {
      "op": "POP"
    },
    "1489": {
      "jump": "o",
      "offset": [
        270,
        324
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1490": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4054,
        5023
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1495": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1497": {
      "op": "SHL"
    },
    "1498": {
      "op": "SUB"
    },
    "1499": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4184,
        4211
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 9
    },
    "1500": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4184,
        4211
      ],
      "op": "AND",
      "path": "4"
    },
    "1501": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4201,
        4211
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1502": {
      "branch": 22,
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4184,
        4211
      ],
      "op": "EQ",
      "path": "4"
    },
    "1503": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4176,
        4254
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x63B"
    },
    "1507": {
      "branch": 22,
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4176,
        4254
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1508": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4176,
        4254
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1510": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4176,
        4254
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1511": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1517": {
      "op": "SHL"
    },
    "1518": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4176,
        4254
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1519": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4176,
        4254
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1522": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4176,
        4254
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1524": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4176,
        4254
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1525": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4176,
        4254
      ],
      "op": "ADD",
      "path": "4"
    },
    "1526": {
      "op": "MSTORE"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1531": {
      "op": "DUP3"
    },
    "1532": {
      "op": "ADD"
    },
    "1533": {
      "op": "MSTORE"
    },
    "1534": {
      "op": "PUSH32",
      "value": "0x596F7520417265204E6F74204F776E6572204F66205468697320436572746966"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1569": {
      "op": "DUP3"
    },
    "1570": {
      "op": "ADD"
    },
    "1571": {
      "op": "MSTORE"
    },
    "1572": {
      "op": "PUSH6",
      "value": "0x696361746521"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1581": {
      "op": "SHL"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1584": {
      "op": "DUP3"
    },
    "1585": {
      "op": "ADD"
    },
    "1586": {
      "op": "MSTORE"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1589": {
      "op": "ADD"
    },
    "1590": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4176,
        4254
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x4CE"
    },
    "1594": {
      "op": "JUMP"
    },
    "1595": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4176,
        4254
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1596": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4285,
        4300
      ],
      "op": "PUSH3",
      "path": "4",
      "statement": 10,
      "value": "0x645"
    },
    "1600": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4285,
        4298
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x340"
    },
    "1604": {
      "fn": "CopyRightLockCreator.transOwnership",
      "jump": "i",
      "offset": [
        4285,
        4300
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1605": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4285,
        4300
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1606": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4272,
        4281
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "1607": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4272,
        4300
      ],
      "op": "LT",
      "path": "4"
    },
    "1608": {
      "branch": 23,
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4272,
        4300
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1609": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4264,
        4359
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x667"
    },
    "1613": {
      "branch": 23,
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4264,
        4359
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1614": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4264,
        4359
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1616": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4264,
        4359
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1617": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1623": {
      "op": "SHL"
    },
    "1624": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4264,
        4359
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1625": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4264,
        4359
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1626": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4264,
        4359
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1628": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4264,
        4359
      ],
      "op": "ADD",
      "path": "4"
    },
    "1629": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4264,
        4359
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x4CE"
    },
    "1633": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4264,
        4359
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1634": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4264,
        4359
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xD10"
    },
    "1638": {
      "fn": "CopyRightLockCreator.transOwnership",
      "jump": "i",
      "offset": [
        4264,
        4359
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1639": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4264,
        4359
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1640": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4378,
        4414
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1642": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4417,
        4453
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x674"
    },
    "1646": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4439,
        4452
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1647": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4417,
        4438
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x28E"
    },
    "1651": {
      "fn": "CopyRightLockCreator.transOwnership",
      "jump": "i",
      "offset": [
        4417,
        4453
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1652": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4417,
        4453
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1659": {
      "op": "SHL"
    },
    "1660": {
      "op": "SUB"
    },
    "1661": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4479,
        4511
      ],
      "op": "DUP6",
      "path": "4",
      "statement": 11
    },
    "1662": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4479,
        4511
      ],
      "op": "AND",
      "path": "4"
    },
    "1663": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4479,
        4511
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1665": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4479,
        4511
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1666": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4479,
        4511
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1667": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4479,
        4511
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1668": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4479,
        4496
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1670": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4479,
        4511
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1672": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4479,
        4511
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1673": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4479,
        4511
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1675": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4479,
        4511
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1676": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4479,
        4511
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1677": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4378,
        4453
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1678": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4378,
        4453
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1679": {
      "op": "POP"
    },
    "1680": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4472,
        4512
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x69B"
    },
    "1684": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4472,
        4512
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1685": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4479,
        4511
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1686": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4472,
        4512
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x90F"
    },
    "1690": {
      "fn": "CopyRightLockCreator.transOwnership",
      "jump": "i",
      "offset": [
        4472,
        4512
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1691": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4472,
        4512
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1692": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4674,
        4680
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1694": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4669,
        5017
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1695": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4688,
        4707
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1696": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4688,
        4714
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1697": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4684,
        4685
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1698": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4684,
        4714
      ],
      "op": "LT",
      "path": "4"
    },
    "1699": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4669,
        5017
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1700": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4669,
        5017
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x7D2"
    },
    "1704": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4669,
        5017
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1705": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4764,
        4776
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1712": {
      "op": "SHL"
    },
    "1713": {
      "op": "SUB"
    },
    "1714": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4738,
        4776
      ],
      "op": "AND",
      "path": "4"
    },
    "1715": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4738,
        4757
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1716": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4758,
        4759
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1717": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4738,
        4760
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1718": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4738,
        4760
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1719": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4738,
        4760
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1720": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4738,
        4760
      ],
      "op": "LT",
      "path": "4"
    },
    "1721": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4738,
        4760
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x6C7"
    },
    "1725": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4738,
        4760
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1726": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4738,
        4760
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x6C7"
    },
    "1730": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4738,
        4760
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xCFA"
    },
    "1734": {
      "fn": "CopyRightLockCreator.transOwnership",
      "jump": "i",
      "offset": [
        4738,
        4760
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1735": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4738,
        4760
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1736": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4738,
        4760
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1738": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4738,
        4760
      ],
      "op": "MUL",
      "path": "4"
    },
    "1739": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4738,
        4760
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1741": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4738,
        4760
      ],
      "op": "ADD",
      "path": "4"
    },
    "1742": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4738,
        4760
      ],
      "op": "ADD",
      "path": "4"
    },
    "1743": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4738,
        4760
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1750": {
      "op": "SHL"
    },
    "1751": {
      "op": "SUB"
    },
    "1752": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4738,
        4776
      ],
      "op": "AND",
      "path": "4"
    },
    "1753": {
      "branch": 24,
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4738,
        4776
      ],
      "op": "SUB",
      "path": "4"
    },
    "1754": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4734,
        4857
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x71C"
    },
    "1758": {
      "branch": 24,
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4734,
        4857
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1765": {
      "op": "SHL"
    },
    "1766": {
      "op": "SUB"
    },
    "1767": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4823
      ],
      "op": "DUP5",
      "path": "4",
      "statement": 12
    },
    "1768": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4823
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1769": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4823
      ],
      "op": "AND",
      "path": "4"
    },
    "1770": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4823
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1772": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4823
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1773": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4823
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1774": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4823
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1775": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4812
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1777": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4823
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1779": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4823
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1780": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4823
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1781": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4823
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1782": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4823
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1784": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4823
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1785": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4823
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1786": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1787": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1788": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1789": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1790": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "ADD",
      "path": "4"
    },
    "1791": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1792": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1793": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1794": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1795": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1796": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1797": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1798": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "ADD",
      "path": "4"
    },
    "1799": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1800": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "op": "SUB"
    },
    "1809": {
      "op": "NOT"
    },
    "1810": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "AND",
      "path": "4"
    },
    "1811": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1812": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1813": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "AND",
      "path": "4"
    },
    "1814": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1815": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1816": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1817": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "OR",
      "path": "4"
    },
    "1818": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1819": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4795,
        4842
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1820": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4734,
        4857
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1821": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4900,
        4912
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1828": {
      "op": "SHL"
    },
    "1829": {
      "op": "SUB"
    },
    "1830": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4874,
        4912
      ],
      "op": "AND",
      "path": "4"
    },
    "1831": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4874,
        4893
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1832": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4894,
        4895
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1833": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4874,
        4896
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1834": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4874,
        4896
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1835": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4874,
        4896
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1836": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4874,
        4896
      ],
      "op": "LT",
      "path": "4"
    },
    "1837": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4874,
        4896
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x73B"
    },
    "1841": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4874,
        4896
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1842": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4874,
        4896
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x73B"
    },
    "1846": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4874,
        4896
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xCFA"
    },
    "1850": {
      "fn": "CopyRightLockCreator.transOwnership",
      "jump": "i",
      "offset": [
        4874,
        4896
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1851": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4874,
        4896
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1852": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4874,
        4896
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1854": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4874,
        4896
      ],
      "op": "MUL",
      "path": "4"
    },
    "1855": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4874,
        4896
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1857": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4874,
        4896
      ],
      "op": "ADD",
      "path": "4"
    },
    "1858": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4874,
        4896
      ],
      "op": "ADD",
      "path": "4"
    },
    "1859": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4874,
        4896
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1866": {
      "op": "SHL"
    },
    "1867": {
      "op": "SUB"
    },
    "1868": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4874,
        4912
      ],
      "op": "AND",
      "path": "4"
    },
    "1869": {
      "branch": 25,
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4874,
        4912
      ],
      "op": "EQ",
      "path": "4"
    },
    "1870": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4870,
        5007
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x7BD"
    },
    "1874": {
      "branch": 25,
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4870,
        5007
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1881": {
      "op": "SHL"
    },
    "1882": {
      "op": "SUB"
    },
    "1883": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4963
      ],
      "op": "DUP6",
      "path": "4",
      "statement": 13
    },
    "1884": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4963
      ],
      "op": "AND",
      "path": "4"
    },
    "1885": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4963
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1887": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4963
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1888": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4963
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1889": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4963
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1890": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1892": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4963
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1894": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4963
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1895": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4963
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1897": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4963
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1898": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4963
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1899": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4991
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1900": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4991
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1901": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4988
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1902": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4988
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1903": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4989,
        4990
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1904": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4989,
        4990
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1905": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4991
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1906": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4991
      ],
      "op": "LT",
      "path": "4"
    },
    "1907": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4991
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x781"
    },
    "1911": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4991
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1912": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4991
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x781"
    },
    "1916": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4991
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xCFA"
    },
    "1920": {
      "fn": "CopyRightLockCreator.transOwnership",
      "jump": "i",
      "offset": [
        4969,
        4991
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1921": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4991
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1922": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4991
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1924": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4991
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1925": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4991
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1926": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4991
      ],
      "op": "MUL",
      "path": "4"
    },
    "1927": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4991
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1928": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4991
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1929": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4991
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1930": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4991
      ],
      "op": "ADD",
      "path": "4"
    },
    "1931": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4991
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1932": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4991
      ],
      "op": "ADD",
      "path": "4"
    },
    "1933": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4969,
        4991
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1934": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1935": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1936": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1938": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1939": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "ADD",
      "path": "4"
    },
    "1940": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1941": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1944": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1945": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1946": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1947": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1948": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1949": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1950": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1951": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "ADD",
      "path": "4"
    },
    "1952": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1953": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1960": {
      "op": "SHL"
    },
    "1961": {
      "op": "SUB"
    },
    "1962": {
      "op": "NOT"
    },
    "1963": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "AND",
      "path": "4"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1970": {
      "op": "SHL"
    },
    "1971": {
      "op": "SUB"
    },
    "1972": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1973": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1974": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "AND",
      "path": "4"
    },
    "1975": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1976": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1977": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1978": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "OR",
      "path": "4"
    },
    "1979": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1980": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4931,
        4992
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1981": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4870,
        5007
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1982": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4716,
        4719
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 14
    },
    "1983": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4716,
        4719
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x7C9"
    },
    "1987": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4716,
        4719
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1988": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4716,
        4719
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xE4C"
    },
    "1992": {
      "fn": "CopyRightLockCreator.transOwnership",
      "jump": "i",
      "offset": [
        4716,
        4719
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1993": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4716,
        4719
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1994": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4716,
        4719
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1995": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4716,
        4719
      ],
      "op": "POP",
      "path": "4"
    },
    "1996": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4716,
        4719
      ],
      "op": "POP",
      "path": "4"
    },
    "1997": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4669,
        5017
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x69E"
    },
    "2001": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4669,
        5017
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2002": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4669,
        5017
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2003": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4669,
        5017
      ],
      "op": "POP",
      "path": "4"
    },
    "2004": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4157,
        5023
      ],
      "op": "POP",
      "path": "4"
    },
    "2005": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4054,
        5023
      ],
      "op": "POP",
      "path": "4"
    },
    "2006": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4054,
        5023
      ],
      "op": "POP",
      "path": "4"
    },
    "2007": {
      "fn": "CopyRightLockCreator.transOwnership",
      "offset": [
        4054,
        5023
      ],
      "op": "POP",
      "path": "4"
    },
    "2008": {
      "fn": "CopyRightLockCreator.transOwnership",
      "jump": "o",
      "offset": [
        4054,
        5023
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2009": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2279
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2010": {
      "offset": [
        1094,
        1107
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x7E3"
    },
    "2014": {
      "offset": [
        1094,
        1105
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x855"
    },
    "2018": {
      "jump": "i",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2019": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1094,
        1107
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2024": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2026": {
      "op": "SHL"
    },
    "2027": {
      "op": "SUB"
    },
    "2028": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 15
    },
    "2029": {
      "branch": 26,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2169,
        2191
      ],
      "op": "AND",
      "path": "0"
    },
    "2030": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x84A"
    },
    "2034": {
      "branch": 26,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2035": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2037": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2038": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2044": {
      "op": "SHL"
    },
    "2045": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2046": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2049": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2051": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2052": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "ADD",
      "path": "0"
    },
    "2053": {
      "op": "MSTORE"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2058": {
      "op": "DUP3"
    },
    "2059": {
      "op": "ADD"
    },
    "2060": {
      "op": "MSTORE"
    },
    "2061": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2094": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2096": {
      "op": "DUP3"
    },
    "2097": {
      "op": "ADD"
    },
    "2098": {
      "op": "MSTORE"
    },
    "2099": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2106": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2108": {
      "op": "SHL"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2111": {
      "op": "DUP3"
    },
    "2112": {
      "op": "ADD"
    },
    "2113": {
      "op": "MSTORE"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2116": {
      "op": "ADD"
    },
    "2117": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x4CE"
    },
    "2121": {
      "op": "JUMP"
    },
    "2122": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2161,
        2234
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2123": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2272
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 16,
      "value": "0x33D"
    },
    "2127": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2263,
        2271
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2128": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2244,
        2262
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x8B1"
    },
    "2132": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2244,
        2272
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2133": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1359,
        1489
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2134": {
      "fn": "Ownable.owner",
      "offset": [
        1247,
        1254
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2136": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2143": {
      "op": "SHL"
    },
    "2144": {
      "op": "SUB"
    },
    "2145": {
      "fn": "Ownable.owner",
      "offset": [
        1273,
        1279
      ],
      "op": "AND",
      "path": "0"
    },
    "2146": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 17
    },
    "2147": {
      "branch": 27,
      "fn": "Ownable._checkOwner",
      "offset": [
        1422,
        1445
      ],
      "op": "EQ",
      "path": "0",
      "statement": 18
    },
    "2148": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x412"
    },
    "2152": {
      "branch": 27,
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2153": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2155": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2156": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2162": {
      "op": "SHL"
    },
    "2163": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2164": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2167": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2169": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2170": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "ADD",
      "path": "0"
    },
    "2171": {
      "op": "DUP2"
    },
    "2172": {
      "op": "SWAP1"
    },
    "2173": {
      "op": "MSTORE"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2176": {
      "op": "DUP3"
    },
    "2177": {
      "op": "ADD"
    },
    "2178": {
      "op": "MSTORE"
    },
    "2179": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2214": {
      "op": "DUP3"
    },
    "2215": {
      "op": "ADD"
    },
    "2216": {
      "op": "MSTORE"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2219": {
      "op": "ADD"
    },
    "2220": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1414,
        1482
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0x4CE"
    },
    "2224": {
      "op": "JUMP"
    },
    "2225": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2226": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2228": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2229": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2236": {
      "op": "SHL"
    },
    "2237": {
      "op": "SUB"
    },
    "2238": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 19
    },
    "2239": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2240": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2247": {
      "op": "SHL"
    },
    "2248": {
      "op": "SUB"
    },
    "2249": {
      "op": "NOT"
    },
    "2250": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2251": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "0"
    },
    "2252": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2253": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "OR",
      "path": "0"
    },
    "2254": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2255": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2541,
        2558
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2256": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x40"
    },
    "2258": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2259": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2260": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2261": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2262": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "AND",
      "path": "0"
    },
    "2263": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2264": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2265": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2525,
        2531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2266": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2299": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2300": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2506,
        2522
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2301": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2573,
        2613
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2302": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2496,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "2303": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2433,
        2620
      ],
      "op": "POP",
      "path": "0"
    },
    "2304": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2433,
        2620
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2305": {
      "op": "JUMPDEST"
    },
    "2306": {
      "op": "PUSH2",
      "value": "0xC3B"
    },
    "2309": {
      "op": "DUP1"
    },
    "2310": {
      "op": "PUSH3",
      "value": "0xE69"
    },
    "2314": {
      "op": "DUP4"
    },
    "2315": {
      "op": "CODECOPY"
    },
    "2316": {
      "op": "ADD"
    },
    "2317": {
      "op": "SWAP1"
    },
    "2318": {
      "jump": "o",
      "op": "JUMP"
    },
    "2319": {
      "op": "JUMPDEST"
    },
    "2320": {
      "op": "POP"
    },
    "2321": {
      "op": "DUP1"
    },
    "2322": {
      "op": "SLOAD"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2325": {
      "op": "DUP3"
    },
    "2326": {
      "op": "SSTORE"
    },
    "2327": {
      "op": "SWAP1"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2330": {
      "op": "MSTORE"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2335": {
      "op": "KECCAK256"
    },
    "2336": {
      "op": "SWAP1"
    },
    "2337": {
      "op": "DUP2"
    },
    "2338": {
      "op": "ADD"
    },
    "2339": {
      "op": "SWAP1"
    },
    "2340": {
      "op": "PUSH3",
      "value": "0x33D"
    },
    "2344": {
      "op": "SWAP2"
    },
    "2345": {
      "op": "SWAP1"
    },
    "2346": {
      "op": "JUMPDEST"
    },
    "2347": {
      "op": "DUP1"
    },
    "2348": {
      "op": "DUP3"
    },
    "2349": {
      "op": "GT"
    },
    "2350": {
      "op": "ISZERO"
    },
    "2351": {
      "op": "PUSH3",
      "value": "0x940"
    },
    "2355": {
      "op": "JUMPI"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2358": {
      "op": "DUP2"
    },
    "2359": {
      "op": "SSTORE"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2362": {
      "op": "ADD"
    },
    "2363": {
      "op": "PUSH3",
      "value": "0x92A"
    },
    "2367": {
      "op": "JUMP"
    },
    "2368": {
      "op": "JUMPDEST"
    },
    "2369": {
      "op": "POP"
    },
    "2370": {
      "op": "SWAP1"
    },
    "2371": {
      "jump": "o",
      "op": "JUMP"
    },
    "2372": {
      "op": "JUMPDEST"
    },
    "2373": {
      "op": "DUP1"
    },
    "2374": {
      "op": "CALLDATALOAD"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2379": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2381": {
      "op": "SHL"
    },
    "2382": {
      "op": "SUB"
    },
    "2383": {
      "op": "DUP2"
    },
    "2384": {
      "op": "AND"
    },
    "2385": {
      "op": "DUP2"
    },
    "2386": {
      "op": "EQ"
    },
    "2387": {
      "op": "PUSH3",
      "value": "0x95C"
    },
    "2391": {
      "op": "JUMPI"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2394": {
      "op": "DUP1"
    },
    "2395": {
      "op": "REVERT"
    },
    "2396": {
      "op": "JUMPDEST"
    },
    "2397": {
      "op": "SWAP2"
    },
    "2398": {
      "op": "SWAP1"
    },
    "2399": {
      "op": "POP"
    },
    "2400": {
      "jump": "o",
      "op": "JUMP"
    },
    "2401": {
      "op": "JUMPDEST"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2406": {
      "op": "DUP3"
    },
    "2407": {
      "op": "DUP5"
    },
    "2408": {
      "op": "SUB"
    },
    "2409": {
      "op": "SLT"
    },
    "2410": {
      "op": "ISZERO"
    },
    "2411": {
      "op": "PUSH3",
      "value": "0x974"
    },
    "2415": {
      "op": "JUMPI"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2418": {
      "op": "DUP1"
    },
    "2419": {
      "op": "REVERT"
    },
    "2420": {
      "op": "JUMPDEST"
    },
    "2421": {
      "op": "PUSH3",
      "value": "0x97F"
    },
    "2425": {
      "op": "DUP3"
    },
    "2426": {
      "op": "PUSH3",
      "value": "0x944"
    },
    "2430": {
      "jump": "i",
      "op": "JUMP"
    },
    "2431": {
      "op": "JUMPDEST"
    },
    "2432": {
      "op": "SWAP4"
    },
    "2433": {
      "op": "SWAP3"
    },
    "2434": {
      "op": "POP"
    },
    "2435": {
      "op": "POP"
    },
    "2436": {
      "op": "POP"
    },
    "2437": {
      "jump": "o",
      "op": "JUMP"
    },
    "2438": {
      "op": "JUMPDEST"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2441": {
      "op": "DUP1"
    },
    "2442": {
      "op": "DUP3"
    },
    "2443": {
      "op": "MSTORE"
    },
    "2444": {
      "op": "DUP3"
    },
    "2445": {
      "op": "MLOAD"
    },
    "2446": {
      "op": "DUP3"
    },
    "2447": {
      "op": "DUP3"
    },
    "2448": {
      "op": "ADD"
    },
    "2449": {
      "op": "DUP2"
    },
    "2450": {
      "op": "SWAP1"
    },
    "2451": {
      "op": "MSTORE"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2454": {
      "op": "SWAP2"
    },
    "2455": {
      "op": "SWAP1"
    },
    "2456": {
      "op": "DUP5"
    },
    "2457": {
      "op": "DUP3"
    },
    "2458": {
      "op": "ADD"
    },
    "2459": {
      "op": "SWAP1"
    },
    "2460": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2462": {
      "op": "DUP6"
    },
    "2463": {
      "op": "ADD"
    },
    "2464": {
      "op": "SWAP1"
    },
    "2465": {
      "op": "DUP5"
    },
    "2466": {
      "op": "JUMPDEST"
    },
    "2467": {
      "op": "DUP2"
    },
    "2468": {
      "op": "DUP2"
    },
    "2469": {
      "op": "LT"
    },
    "2470": {
      "op": "ISZERO"
    },
    "2471": {
      "op": "PUSH3",
      "value": "0x9C9"
    },
    "2475": {
      "op": "JUMPI"
    },
    "2476": {
      "op": "DUP4"
    },
    "2477": {
      "op": "MLOAD"
    },
    "2478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2484": {
      "op": "SHL"
    },
    "2485": {
      "op": "SUB"
    },
    "2486": {
      "op": "AND"
    },
    "2487": {
      "op": "DUP4"
    },
    "2488": {
      "op": "MSTORE"
    },
    "2489": {
      "op": "SWAP3"
    },
    "2490": {
      "op": "DUP5"
    },
    "2491": {
      "op": "ADD"
    },
    "2492": {
      "op": "SWAP3"
    },
    "2493": {
      "op": "SWAP2"
    },
    "2494": {
      "op": "DUP5"
    },
    "2495": {
      "op": "ADD"
    },
    "2496": {
      "op": "SWAP2"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2499": {
      "op": "ADD"
    },
    "2500": {
      "op": "PUSH3",
      "value": "0x9A2"
    },
    "2504": {
      "op": "JUMP"
    },
    "2505": {
      "op": "JUMPDEST"
    },
    "2506": {
      "op": "POP"
    },
    "2507": {
      "op": "SWAP1"
    },
    "2508": {
      "op": "SWAP7"
    },
    "2509": {
      "op": "SWAP6"
    },
    "2510": {
      "op": "POP"
    },
    "2511": {
      "op": "POP"
    },
    "2512": {
      "op": "POP"
    },
    "2513": {
      "op": "POP"
    },
    "2514": {
      "op": "POP"
    },
    "2515": {
      "op": "POP"
    },
    "2516": {
      "jump": "o",
      "op": "JUMP"
    },
    "2517": {
      "op": "JUMPDEST"
    },
    "2518": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2523": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2525": {
      "op": "SHL"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2528": {
      "op": "MSTORE"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2533": {
      "op": "MSTORE"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2538": {
      "op": "REVERT"
    },
    "2539": {
      "op": "JUMPDEST"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2542": {
      "op": "DUP3"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2545": {
      "op": "DUP4"
    },
    "2546": {
      "op": "ADD"
    },
    "2547": {
      "op": "SLT"
    },
    "2548": {
      "op": "PUSH3",
      "value": "0x9FD"
    },
    "2552": {
      "op": "JUMPI"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2555": {
      "op": "DUP1"
    },
    "2556": {
      "op": "REVERT"
    },
    "2557": {
      "op": "JUMPDEST"
    },
    "2558": {
      "op": "DUP2"
    },
    "2559": {
      "op": "CALLDATALOAD"
    },
    "2560": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2569": {
      "op": "DUP1"
    },
    "2570": {
      "op": "DUP3"
    },
    "2571": {
      "op": "GT"
    },
    "2572": {
      "op": "ISZERO"
    },
    "2573": {
      "op": "PUSH3",
      "value": "0xA1B"
    },
    "2577": {
      "op": "JUMPI"
    },
    "2578": {
      "op": "PUSH3",
      "value": "0xA1B"
    },
    "2582": {
      "op": "PUSH3",
      "value": "0x9D5"
    },
    "2586": {
      "jump": "i",
      "op": "JUMP"
    },
    "2587": {
      "op": "JUMPDEST"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2590": {
      "op": "MLOAD"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2593": {
      "op": "DUP4"
    },
    "2594": {
      "op": "ADD"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2597": {
      "op": "NOT"
    },
    "2598": {
      "op": "SWAP1"
    },
    "2599": {
      "op": "DUP2"
    },
    "2600": {
      "op": "AND"
    },
    "2601": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2603": {
      "op": "ADD"
    },
    "2604": {
      "op": "AND"
    },
    "2605": {
      "op": "DUP2"
    },
    "2606": {
      "op": "ADD"
    },
    "2607": {
      "op": "SWAP1"
    },
    "2608": {
      "op": "DUP3"
    },
    "2609": {
      "op": "DUP3"
    },
    "2610": {
      "op": "GT"
    },
    "2611": {
      "op": "DUP2"
    },
    "2612": {
      "op": "DUP4"
    },
    "2613": {
      "op": "LT"
    },
    "2614": {
      "op": "OR"
    },
    "2615": {
      "op": "ISZERO"
    },
    "2616": {
      "op": "PUSH3",
      "value": "0xA46"
    },
    "2620": {
      "op": "JUMPI"
    },
    "2621": {
      "op": "PUSH3",
      "value": "0xA46"
    },
    "2625": {
      "op": "PUSH3",
      "value": "0x9D5"
    },
    "2629": {
      "jump": "i",
      "op": "JUMP"
    },
    "2630": {
      "op": "JUMPDEST"
    },
    "2631": {
      "op": "DUP2"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2634": {
      "op": "MSTORE"
    },
    "2635": {
      "op": "DUP4"
    },
    "2636": {
      "op": "DUP2"
    },
    "2637": {
      "op": "MSTORE"
    },
    "2638": {
      "op": "DUP7"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2641": {
      "op": "DUP6"
    },
    "2642": {
      "op": "DUP9"
    },
    "2643": {
      "op": "ADD"
    },
    "2644": {
      "op": "ADD"
    },
    "2645": {
      "op": "GT"
    },
    "2646": {
      "op": "ISZERO"
    },
    "2647": {
      "op": "PUSH3",
      "value": "0xA60"
    },
    "2651": {
      "op": "JUMPI"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2654": {
      "op": "DUP1"
    },
    "2655": {
      "op": "REVERT"
    },
    "2656": {
      "op": "JUMPDEST"
    },
    "2657": {
      "op": "DUP4"
    },
    "2658": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2660": {
      "op": "DUP8"
    },
    "2661": {
      "op": "ADD"
    },
    "2662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2664": {
      "op": "DUP4"
    },
    "2665": {
      "op": "ADD"
    },
    "2666": {
      "op": "CALLDATACOPY"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2671": {
      "op": "DUP6"
    },
    "2672": {
      "op": "DUP4"
    },
    "2673": {
      "op": "ADD"
    },
    "2674": {
      "op": "ADD"
    },
    "2675": {
      "op": "MSTORE"
    },
    "2676": {
      "op": "DUP1"
    },
    "2677": {
      "op": "SWAP5"
    },
    "2678": {
      "op": "POP"
    },
    "2679": {
      "op": "POP"
    },
    "2680": {
      "op": "POP"
    },
    "2681": {
      "op": "POP"
    },
    "2682": {
      "op": "POP"
    },
    "2683": {
      "op": "SWAP3"
    },
    "2684": {
      "op": "SWAP2"
    },
    "2685": {
      "op": "POP"
    },
    "2686": {
      "op": "POP"
    },
    "2687": {
      "jump": "o",
      "op": "JUMP"
    },
    "2688": {
      "op": "JUMPDEST"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2691": {
      "op": "DUP1"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2694": {
      "op": "DUP1"
    },
    "2695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2697": {
      "op": "DUP1"
    },
    "2698": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2702": {
      "op": "DUP9"
    },
    "2703": {
      "op": "DUP11"
    },
    "2704": {
      "op": "SUB"
    },
    "2705": {
      "op": "SLT"
    },
    "2706": {
      "op": "ISZERO"
    },
    "2707": {
      "op": "PUSH3",
      "value": "0xA9C"
    },
    "2711": {
      "op": "JUMPI"
    },
    "2712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2714": {
      "op": "DUP1"
    },
    "2715": {
      "op": "REVERT"
    },
    "2716": {
      "op": "JUMPDEST"
    },
    "2717": {
      "op": "DUP8"
    },
    "2718": {
      "op": "CALLDATALOAD"
    },
    "2719": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2728": {
      "op": "DUP1"
    },
    "2729": {
      "op": "DUP3"
    },
    "2730": {
      "op": "GT"
    },
    "2731": {
      "op": "ISZERO"
    },
    "2732": {
      "op": "PUSH3",
      "value": "0xAB5"
    },
    "2736": {
      "op": "JUMPI"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2739": {
      "op": "DUP1"
    },
    "2740": {
      "op": "REVERT"
    },
    "2741": {
      "op": "JUMPDEST"
    },
    "2742": {
      "op": "PUSH3",
      "value": "0xAC3"
    },
    "2746": {
      "op": "DUP12"
    },
    "2747": {
      "op": "DUP4"
    },
    "2748": {
      "op": "DUP13"
    },
    "2749": {
      "op": "ADD"
    },
    "2750": {
      "op": "PUSH3",
      "value": "0x9EB"
    },
    "2754": {
      "jump": "i",
      "op": "JUMP"
    },
    "2755": {
      "op": "JUMPDEST"
    },
    "2756": {
      "op": "SWAP9"
    },
    "2757": {
      "op": "POP"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2760": {
      "op": "DUP11"
    },
    "2761": {
      "op": "ADD"
    },
    "2762": {
      "op": "CALLDATALOAD"
    },
    "2763": {
      "op": "SWAP2"
    },
    "2764": {
      "op": "POP"
    },
    "2765": {
      "op": "DUP1"
    },
    "2766": {
      "op": "DUP3"
    },
    "2767": {
      "op": "GT"
    },
    "2768": {
      "op": "ISZERO"
    },
    "2769": {
      "op": "PUSH3",
      "value": "0xADA"
    },
    "2773": {
      "op": "JUMPI"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2776": {
      "op": "DUP1"
    },
    "2777": {
      "op": "REVERT"
    },
    "2778": {
      "op": "JUMPDEST"
    },
    "2779": {
      "op": "PUSH3",
      "value": "0xAE8"
    },
    "2783": {
      "op": "DUP12"
    },
    "2784": {
      "op": "DUP4"
    },
    "2785": {
      "op": "DUP13"
    },
    "2786": {
      "op": "ADD"
    },
    "2787": {
      "op": "PUSH3",
      "value": "0x9EB"
    },
    "2791": {
      "jump": "i",
      "op": "JUMP"
    },
    "2792": {
      "op": "JUMPDEST"
    },
    "2793": {
      "op": "SWAP8"
    },
    "2794": {
      "op": "POP"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2797": {
      "op": "DUP11"
    },
    "2798": {
      "op": "ADD"
    },
    "2799": {
      "op": "CALLDATALOAD"
    },
    "2800": {
      "op": "SWAP2"
    },
    "2801": {
      "op": "POP"
    },
    "2802": {
      "op": "DUP1"
    },
    "2803": {
      "op": "DUP3"
    },
    "2804": {
      "op": "GT"
    },
    "2805": {
      "op": "ISZERO"
    },
    "2806": {
      "op": "PUSH3",
      "value": "0xAFF"
    },
    "2810": {
      "op": "JUMPI"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2813": {
      "op": "DUP1"
    },
    "2814": {
      "op": "REVERT"
    },
    "2815": {
      "op": "JUMPDEST"
    },
    "2816": {
      "op": "PUSH3",
      "value": "0xB0D"
    },
    "2820": {
      "op": "DUP12"
    },
    "2821": {
      "op": "DUP4"
    },
    "2822": {
      "op": "DUP13"
    },
    "2823": {
      "op": "ADD"
    },
    "2824": {
      "op": "PUSH3",
      "value": "0x9EB"
    },
    "2828": {
      "jump": "i",
      "op": "JUMP"
    },
    "2829": {
      "op": "JUMPDEST"
    },
    "2830": {
      "op": "SWAP7"
    },
    "2831": {
      "op": "POP"
    },
    "2832": {
      "op": "PUSH3",
      "value": "0xB1D"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2838": {
      "op": "DUP12"
    },
    "2839": {
      "op": "ADD"
    },
    "2840": {
      "op": "PUSH3",
      "value": "0x944"
    },
    "2844": {
      "jump": "i",
      "op": "JUMP"
    },
    "2845": {
      "op": "JUMPDEST"
    },
    "2846": {
      "op": "SWAP6"
    },
    "2847": {
      "op": "POP"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2850": {
      "op": "DUP11"
    },
    "2851": {
      "op": "ADD"
    },
    "2852": {
      "op": "CALLDATALOAD"
    },
    "2853": {
      "op": "SWAP2"
    },
    "2854": {
      "op": "POP"
    },
    "2855": {
      "op": "DUP1"
    },
    "2856": {
      "op": "DUP3"
    },
    "2857": {
      "op": "GT"
    },
    "2858": {
      "op": "ISZERO"
    },
    "2859": {
      "op": "PUSH3",
      "value": "0xB34"
    },
    "2863": {
      "op": "JUMPI"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2866": {
      "op": "DUP1"
    },
    "2867": {
      "op": "REVERT"
    },
    "2868": {
      "op": "JUMPDEST"
    },
    "2869": {
      "op": "PUSH3",
      "value": "0xB42"
    },
    "2873": {
      "op": "DUP12"
    },
    "2874": {
      "op": "DUP4"
    },
    "2875": {
      "op": "DUP13"
    },
    "2876": {
      "op": "ADD"
    },
    "2877": {
      "op": "PUSH3",
      "value": "0x9EB"
    },
    "2881": {
      "jump": "i",
      "op": "JUMP"
    },
    "2882": {
      "op": "JUMPDEST"
    },
    "2883": {
      "op": "SWAP5"
    },
    "2884": {
      "op": "POP"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2887": {
      "op": "DUP11"
    },
    "2888": {
      "op": "ADD"
    },
    "2889": {
      "op": "CALLDATALOAD"
    },
    "2890": {
      "op": "SWAP2"
    },
    "2891": {
      "op": "POP"
    },
    "2892": {
      "op": "DUP1"
    },
    "2893": {
      "op": "DUP3"
    },
    "2894": {
      "op": "GT"
    },
    "2895": {
      "op": "ISZERO"
    },
    "2896": {
      "op": "PUSH3",
      "value": "0xB59"
    },
    "2900": {
      "op": "JUMPI"
    },
    "2901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2903": {
      "op": "DUP1"
    },
    "2904": {
      "op": "REVERT"
    },
    "2905": {
      "op": "JUMPDEST"
    },
    "2906": {
      "op": "PUSH3",
      "value": "0xB67"
    },
    "2910": {
      "op": "DUP12"
    },
    "2911": {
      "op": "DUP4"
    },
    "2912": {
      "op": "DUP13"
    },
    "2913": {
      "op": "ADD"
    },
    "2914": {
      "op": "PUSH3",
      "value": "0x9EB"
    },
    "2918": {
      "jump": "i",
      "op": "JUMP"
    },
    "2919": {
      "op": "JUMPDEST"
    },
    "2920": {
      "op": "SWAP4"
    },
    "2921": {
      "op": "POP"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2924": {
      "op": "DUP11"
    },
    "2925": {
      "op": "ADD"
    },
    "2926": {
      "op": "CALLDATALOAD"
    },
    "2927": {
      "op": "SWAP2"
    },
    "2928": {
      "op": "POP"
    },
    "2929": {
      "op": "DUP1"
    },
    "2930": {
      "op": "DUP3"
    },
    "2931": {
      "op": "GT"
    },
    "2932": {
      "op": "ISZERO"
    },
    "2933": {
      "op": "PUSH3",
      "value": "0xB7E"
    },
    "2937": {
      "op": "JUMPI"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2940": {
      "op": "DUP1"
    },
    "2941": {
      "op": "REVERT"
    },
    "2942": {
      "op": "JUMPDEST"
    },
    "2943": {
      "op": "POP"
    },
    "2944": {
      "op": "PUSH3",
      "value": "0xB8D"
    },
    "2948": {
      "op": "DUP11"
    },
    "2949": {
      "op": "DUP3"
    },
    "2950": {
      "op": "DUP12"
    },
    "2951": {
      "op": "ADD"
    },
    "2952": {
      "op": "PUSH3",
      "value": "0x9EB"
    },
    "2956": {
      "jump": "i",
      "op": "JUMP"
    },
    "2957": {
      "op": "JUMPDEST"
    },
    "2958": {
      "op": "SWAP2"
    },
    "2959": {
      "op": "POP"
    },
    "2960": {
      "op": "POP"
    },
    "2961": {
      "op": "SWAP3"
    },
    "2962": {
      "op": "SWAP6"
    },
    "2963": {
      "op": "SWAP9"
    },
    "2964": {
      "op": "SWAP2"
    },
    "2965": {
      "op": "SWAP5"
    },
    "2966": {
      "op": "SWAP8"
    },
    "2967": {
      "op": "POP"
    },
    "2968": {
      "op": "SWAP3"
    },
    "2969": {
      "op": "SWAP6"
    },
    "2970": {
      "op": "POP"
    },
    "2971": {
      "jump": "o",
      "op": "JUMP"
    },
    "2972": {
      "op": "JUMPDEST"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2975": {
      "op": "DUP1"
    },
    "2976": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2978": {
      "op": "DUP4"
    },
    "2979": {
      "op": "DUP6"
    },
    "2980": {
      "op": "SUB"
    },
    "2981": {
      "op": "SLT"
    },
    "2982": {
      "op": "ISZERO"
    },
    "2983": {
      "op": "PUSH3",
      "value": "0xBB0"
    },
    "2987": {
      "op": "JUMPI"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2990": {
      "op": "DUP1"
    },
    "2991": {
      "op": "REVERT"
    },
    "2992": {
      "op": "JUMPDEST"
    },
    "2993": {
      "op": "PUSH3",
      "value": "0xBBB"
    },
    "2997": {
      "op": "DUP4"
    },
    "2998": {
      "op": "PUSH3",
      "value": "0x944"
    },
    "3002": {
      "jump": "i",
      "op": "JUMP"
    },
    "3003": {
      "op": "JUMPDEST"
    },
    "3004": {
      "op": "SWAP5"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3007": {
      "op": "SWAP4"
    },
    "3008": {
      "op": "SWAP1"
    },
    "3009": {
      "op": "SWAP4"
    },
    "3010": {
      "op": "ADD"
    },
    "3011": {
      "op": "CALLDATALOAD"
    },
    "3012": {
      "op": "SWAP4"
    },
    "3013": {
      "op": "POP"
    },
    "3014": {
      "op": "POP"
    },
    "3015": {
      "op": "POP"
    },
    "3016": {
      "jump": "o",
      "op": "JUMP"
    },
    "3017": {
      "op": "JUMPDEST"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3020": {
      "op": "DUP1"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3023": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3025": {
      "op": "DUP5"
    },
    "3026": {
      "op": "DUP7"
    },
    "3027": {
      "op": "SUB"
    },
    "3028": {
      "op": "SLT"
    },
    "3029": {
      "op": "ISZERO"
    },
    "3030": {
      "op": "PUSH3",
      "value": "0xBDF"
    },
    "3034": {
      "op": "JUMPI"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3037": {
      "op": "DUP1"
    },
    "3038": {
      "op": "REVERT"
    },
    "3039": {
      "op": "JUMPDEST"
    },
    "3040": {
      "op": "PUSH3",
      "value": "0xBEA"
    },
    "3044": {
      "op": "DUP5"
    },
    "3045": {
      "op": "PUSH3",
      "value": "0x944"
    },
    "3049": {
      "jump": "i",
      "op": "JUMP"
    },
    "3050": {
      "op": "JUMPDEST"
    },
    "3051": {
      "op": "SWAP3"
    },
    "3052": {
      "op": "POP"
    },
    "3053": {
      "op": "PUSH3",
      "value": "0xBFA"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3059": {
      "op": "DUP6"
    },
    "3060": {
      "op": "ADD"
    },
    "3061": {
      "op": "PUSH3",
      "value": "0x944"
    },
    "3065": {
      "jump": "i",
      "op": "JUMP"
    },
    "3066": {
      "op": "JUMPDEST"
    },
    "3067": {
      "op": "SWAP2"
    },
    "3068": {
      "op": "POP"
    },
    "3069": {
      "op": "PUSH3",
      "value": "0xC0A"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3075": {
      "op": "DUP6"
    },
    "3076": {
      "op": "ADD"
    },
    "3077": {
      "op": "PUSH3",
      "value": "0x944"
    },
    "3081": {
      "jump": "i",
      "op": "JUMP"
    },
    "3082": {
      "op": "JUMPDEST"
    },
    "3083": {
      "op": "SWAP1"
    },
    "3084": {
      "op": "POP"
    },
    "3085": {
      "op": "SWAP3"
    },
    "3086": {
      "op": "POP"
    },
    "3087": {
      "op": "SWAP3"
    },
    "3088": {
      "op": "POP"
    },
    "3089": {
      "op": "SWAP3"
    },
    "3090": {
      "jump": "o",
      "op": "JUMP"
    },
    "3091": {
      "op": "JUMPDEST"
    },
    "3092": {
      "op": "DUP1"
    },
    "3093": {
      "op": "MLOAD"
    },
    "3094": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "3105": {
      "op": "DUP2"
    },
    "3106": {
      "op": "AND"
    },
    "3107": {
      "op": "DUP2"
    },
    "3108": {
      "op": "EQ"
    },
    "3109": {
      "op": "PUSH3",
      "value": "0x95C"
    },
    "3113": {
      "op": "JUMPI"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3116": {
      "op": "DUP1"
    },
    "3117": {
      "op": "REVERT"
    },
    "3118": {
      "op": "JUMPDEST"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3121": {
      "op": "DUP1"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3124": {
      "op": "DUP1"
    },
    "3125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3129": {
      "op": "DUP7"
    },
    "3130": {
      "op": "DUP9"
    },
    "3131": {
      "op": "SUB"
    },
    "3132": {
      "op": "SLT"
    },
    "3133": {
      "op": "ISZERO"
    },
    "3134": {
      "op": "PUSH3",
      "value": "0xC47"
    },
    "3138": {
      "op": "JUMPI"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3141": {
      "op": "DUP1"
    },
    "3142": {
      "op": "REVERT"
    },
    "3143": {
      "op": "JUMPDEST"
    },
    "3144": {
      "op": "PUSH3",
      "value": "0xC52"
    },
    "3148": {
      "op": "DUP7"
    },
    "3149": {
      "op": "PUSH3",
      "value": "0xC13"
    },
    "3153": {
      "jump": "i",
      "op": "JUMP"
    },
    "3154": {
      "op": "JUMPDEST"
    },
    "3155": {
      "op": "SWAP5"
    },
    "3156": {
      "op": "POP"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3159": {
      "op": "DUP7"
    },
    "3160": {
      "op": "ADD"
    },
    "3161": {
      "op": "MLOAD"
    },
    "3162": {
      "op": "SWAP4"
    },
    "3163": {
      "op": "POP"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3166": {
      "op": "DUP7"
    },
    "3167": {
      "op": "ADD"
    },
    "3168": {
      "op": "MLOAD"
    },
    "3169": {
      "op": "SWAP3"
    },
    "3170": {
      "op": "POP"
    },
    "3171": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3173": {
      "op": "DUP7"
    },
    "3174": {
      "op": "ADD"
    },
    "3175": {
      "op": "MLOAD"
    },
    "3176": {
      "op": "SWAP2"
    },
    "3177": {
      "op": "POP"
    },
    "3178": {
      "op": "PUSH3",
      "value": "0xC77"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3184": {
      "op": "DUP8"
    },
    "3185": {
      "op": "ADD"
    },
    "3186": {
      "op": "PUSH3",
      "value": "0xC13"
    },
    "3190": {
      "jump": "i",
      "op": "JUMP"
    },
    "3191": {
      "op": "JUMPDEST"
    },
    "3192": {
      "op": "SWAP1"
    },
    "3193": {
      "op": "POP"
    },
    "3194": {
      "op": "SWAP3"
    },
    "3195": {
      "op": "SWAP6"
    },
    "3196": {
      "op": "POP"
    },
    "3197": {
      "op": "SWAP3"
    },
    "3198": {
      "op": "SWAP6"
    },
    "3199": {
      "op": "SWAP1"
    },
    "3200": {
      "op": "SWAP4"
    },
    "3201": {
      "op": "POP"
    },
    "3202": {
      "jump": "o",
      "op": "JUMP"
    },
    "3203": {
      "op": "JUMPDEST"
    },
    "3204": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3211": {
      "op": "SHL"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3214": {
      "op": "MSTORE"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3219": {
      "op": "MSTORE"
    },
    "3220": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3222": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3224": {
      "op": "REVERT"
    },
    "3225": {
      "op": "JUMPDEST"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3228": {
      "op": "DUP2"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3231": {
      "op": "NOT"
    },
    "3232": {
      "op": "DIV"
    },
    "3233": {
      "op": "DUP4"
    },
    "3234": {
      "op": "GT"
    },
    "3235": {
      "op": "DUP3"
    },
    "3236": {
      "op": "ISZERO"
    },
    "3237": {
      "op": "ISZERO"
    },
    "3238": {
      "op": "AND"
    },
    "3239": {
      "op": "ISZERO"
    },
    "3240": {
      "op": "PUSH3",
      "value": "0xCB6"
    },
    "3244": {
      "op": "JUMPI"
    },
    "3245": {
      "op": "PUSH3",
      "value": "0xCB6"
    },
    "3249": {
      "op": "PUSH3",
      "value": "0xC83"
    },
    "3253": {
      "jump": "i",
      "op": "JUMP"
    },
    "3254": {
      "op": "JUMPDEST"
    },
    "3255": {
      "op": "POP"
    },
    "3256": {
      "op": "MUL"
    },
    "3257": {
      "op": "SWAP1"
    },
    "3258": {
      "jump": "o",
      "op": "JUMP"
    },
    "3259": {
      "op": "JUMPDEST"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3262": {
      "op": "DUP3"
    },
    "3263": {
      "op": "PUSH3",
      "value": "0xCD9"
    },
    "3267": {
      "op": "JUMPI"
    },
    "3268": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3275": {
      "op": "SHL"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3278": {
      "op": "MSTORE"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3283": {
      "op": "MSTORE"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3288": {
      "op": "REVERT"
    },
    "3289": {
      "op": "JUMPDEST"
    },
    "3290": {
      "op": "POP"
    },
    "3291": {
      "op": "DIV"
    },
    "3292": {
      "op": "SWAP1"
    },
    "3293": {
      "jump": "o",
      "op": "JUMP"
    },
    "3294": {
      "op": "JUMPDEST"
    },
    "3295": {
      "op": "DUP2"
    },
    "3296": {
      "op": "DUP2"
    },
    "3297": {
      "op": "SUB"
    },
    "3298": {
      "op": "DUP2"
    },
    "3299": {
      "op": "DUP2"
    },
    "3300": {
      "op": "GT"
    },
    "3301": {
      "op": "ISZERO"
    },
    "3302": {
      "op": "PUSH3",
      "value": "0xCF4"
    },
    "3306": {
      "op": "JUMPI"
    },
    "3307": {
      "op": "PUSH3",
      "value": "0xCF4"
    },
    "3311": {
      "op": "PUSH3",
      "value": "0xC83"
    },
    "3315": {
      "jump": "i",
      "op": "JUMP"
    },
    "3316": {
      "op": "JUMPDEST"
    },
    "3317": {
      "op": "SWAP3"
    },
    "3318": {
      "op": "SWAP2"
    },
    "3319": {
      "op": "POP"
    },
    "3320": {
      "op": "POP"
    },
    "3321": {
      "jump": "o",
      "op": "JUMP"
    },
    "3322": {
      "op": "JUMPDEST"
    },
    "3323": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3330": {
      "op": "SHL"
    },
    "3331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3333": {
      "op": "MSTORE"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3338": {
      "op": "MSTORE"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3343": {
      "op": "REVERT"
    },
    "3344": {
      "op": "JUMPDEST"
    },
    "3345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3347": {
      "op": "DUP1"
    },
    "3348": {
      "op": "DUP3"
    },
    "3349": {
      "op": "MSTORE"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x36"
    },
    "3352": {
      "op": "SWAP1"
    },
    "3353": {
      "op": "DUP3"
    },
    "3354": {
      "op": "ADD"
    },
    "3355": {
      "op": "MSTORE"
    },
    "3356": {
      "op": "PUSH32",
      "value": "0x4E6F7420456E6F756768204554482C20796F75206861766520746F2070617920"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3391": {
      "op": "DUP3"
    },
    "3392": {
      "op": "ADD"
    },
    "3393": {
      "op": "MSTORE"
    },
    "3394": {
      "op": "PUSH22",
      "value": "0x746F2063726561746520636572746966696361746521"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x50"
    },
    "3419": {
      "op": "SHL"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3422": {
      "op": "DUP3"
    },
    "3423": {
      "op": "ADD"
    },
    "3424": {
      "op": "MSTORE"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3427": {
      "op": "ADD"
    },
    "3428": {
      "op": "SWAP1"
    },
    "3429": {
      "jump": "o",
      "op": "JUMP"
    },
    "3430": {
      "op": "JUMPDEST"
    },
    "3431": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3433": {
      "op": "DUP2"
    },
    "3434": {
      "op": "MLOAD"
    },
    "3435": {
      "op": "DUP1"
    },
    "3436": {
      "op": "DUP5"
    },
    "3437": {
      "op": "MSTORE"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3440": {
      "op": "JUMPDEST"
    },
    "3441": {
      "op": "DUP2"
    },
    "3442": {
      "op": "DUP2"
    },
    "3443": {
      "op": "LT"
    },
    "3444": {
      "op": "ISZERO"
    },
    "3445": {
      "op": "PUSH3",
      "value": "0xD8E"
    },
    "3449": {
      "op": "JUMPI"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3452": {
      "op": "DUP2"
    },
    "3453": {
      "op": "DUP6"
    },
    "3454": {
      "op": "ADD"
    },
    "3455": {
      "op": "DUP2"
    },
    "3456": {
      "op": "ADD"
    },
    "3457": {
      "op": "MLOAD"
    },
    "3458": {
      "op": "DUP7"
    },
    "3459": {
      "op": "DUP4"
    },
    "3460": {
      "op": "ADD"
    },
    "3461": {
      "op": "DUP3"
    },
    "3462": {
      "op": "ADD"
    },
    "3463": {
      "op": "MSTORE"
    },
    "3464": {
      "op": "ADD"
    },
    "3465": {
      "op": "PUSH3",
      "value": "0xD70"
    },
    "3469": {
      "op": "JUMP"
    },
    "3470": {
      "op": "JUMPDEST"
    },
    "3471": {
      "op": "POP"
    },
    "3472": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3476": {
      "op": "DUP3"
    },
    "3477": {
      "op": "DUP7"
    },
    "3478": {
      "op": "ADD"
    },
    "3479": {
      "op": "ADD"
    },
    "3480": {
      "op": "MSTORE"
    },
    "3481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3485": {
      "op": "NOT"
    },
    "3486": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3488": {
      "op": "DUP4"
    },
    "3489": {
      "op": "ADD"
    },
    "3490": {
      "op": "AND"
    },
    "3491": {
      "op": "DUP6"
    },
    "3492": {
      "op": "ADD"
    },
    "3493": {
      "op": "ADD"
    },
    "3494": {
      "op": "SWAP2"
    },
    "3495": {
      "op": "POP"
    },
    "3496": {
      "op": "POP"
    },
    "3497": {
      "op": "SWAP3"
    },
    "3498": {
      "op": "SWAP2"
    },
    "3499": {
      "op": "POP"
    },
    "3500": {
      "op": "POP"
    },
    "3501": {
      "jump": "o",
      "op": "JUMP"
    },
    "3502": {
      "op": "JUMPDEST"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3505": {
      "op": "DUP2"
    },
    "3506": {
      "op": "MSTORE"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3509": {
      "op": "PUSH3",
      "value": "0xDC3"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3515": {
      "op": "DUP4"
    },
    "3516": {
      "op": "ADD"
    },
    "3517": {
      "op": "DUP11"
    },
    "3518": {
      "op": "PUSH3",
      "value": "0xD66"
    },
    "3522": {
      "jump": "i",
      "op": "JUMP"
    },
    "3523": {
      "op": "JUMPDEST"
    },
    "3524": {
      "op": "DUP3"
    },
    "3525": {
      "op": "DUP2"
    },
    "3526": {
      "op": "SUB"
    },
    "3527": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3529": {
      "op": "DUP5"
    },
    "3530": {
      "op": "ADD"
    },
    "3531": {
      "op": "MSTORE"
    },
    "3532": {
      "op": "PUSH3",
      "value": "0xDD7"
    },
    "3536": {
      "op": "DUP2"
    },
    "3537": {
      "op": "DUP11"
    },
    "3538": {
      "op": "PUSH3",
      "value": "0xD66"
    },
    "3542": {
      "jump": "i",
      "op": "JUMP"
    },
    "3543": {
      "op": "JUMPDEST"
    },
    "3544": {
      "op": "SWAP1"
    },
    "3545": {
      "op": "POP"
    },
    "3546": {
      "op": "DUP3"
    },
    "3547": {
      "op": "DUP2"
    },
    "3548": {
      "op": "SUB"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3551": {
      "op": "DUP5"
    },
    "3552": {
      "op": "ADD"
    },
    "3553": {
      "op": "MSTORE"
    },
    "3554": {
      "op": "PUSH3",
      "value": "0xDED"
    },
    "3558": {
      "op": "DUP2"
    },
    "3559": {
      "op": "DUP10"
    },
    "3560": {
      "op": "PUSH3",
      "value": "0xD66"
    },
    "3564": {
      "jump": "i",
      "op": "JUMP"
    },
    "3565": {
      "op": "JUMPDEST"
    },
    "3566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3572": {
      "op": "SHL"
    },
    "3573": {
      "op": "SUB"
    },
    "3574": {
      "op": "DUP9"
    },
    "3575": {
      "op": "AND"
    },
    "3576": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3578": {
      "op": "DUP6"
    },
    "3579": {
      "op": "ADD"
    },
    "3580": {
      "op": "MSTORE"
    },
    "3581": {
      "op": "DUP4"
    },
    "3582": {
      "op": "DUP2"
    },
    "3583": {
      "op": "SUB"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3586": {
      "op": "DUP6"
    },
    "3587": {
      "op": "ADD"
    },
    "3588": {
      "op": "MSTORE"
    },
    "3589": {
      "op": "SWAP1"
    },
    "3590": {
      "op": "POP"
    },
    "3591": {
      "op": "PUSH3",
      "value": "0xE12"
    },
    "3595": {
      "op": "DUP2"
    },
    "3596": {
      "op": "DUP8"
    },
    "3597": {
      "op": "PUSH3",
      "value": "0xD66"
    },
    "3601": {
      "jump": "i",
      "op": "JUMP"
    },
    "3602": {
      "op": "JUMPDEST"
    },
    "3603": {
      "op": "SWAP1"
    },
    "3604": {
      "op": "POP"
    },
    "3605": {
      "op": "DUP3"
    },
    "3606": {
      "op": "DUP2"
    },
    "3607": {
      "op": "SUB"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3610": {
      "op": "DUP5"
    },
    "3611": {
      "op": "ADD"
    },
    "3612": {
      "op": "MSTORE"
    },
    "3613": {
      "op": "PUSH3",
      "value": "0xE28"
    },
    "3617": {
      "op": "DUP2"
    },
    "3618": {
      "op": "DUP7"
    },
    "3619": {
      "op": "PUSH3",
      "value": "0xD66"
    },
    "3623": {
      "jump": "i",
      "op": "JUMP"
    },
    "3624": {
      "op": "JUMPDEST"
    },
    "3625": {
      "op": "SWAP1"
    },
    "3626": {
      "op": "POP"
    },
    "3627": {
      "op": "DUP3"
    },
    "3628": {
      "op": "DUP2"
    },
    "3629": {
      "op": "SUB"
    },
    "3630": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3632": {
      "op": "DUP5"
    },
    "3633": {
      "op": "ADD"
    },
    "3634": {
      "op": "MSTORE"
    },
    "3635": {
      "op": "PUSH3",
      "value": "0xE3E"
    },
    "3639": {
      "op": "DUP2"
    },
    "3640": {
      "op": "DUP6"
    },
    "3641": {
      "op": "PUSH3",
      "value": "0xD66"
    },
    "3645": {
      "jump": "i",
      "op": "JUMP"
    },
    "3646": {
      "op": "JUMPDEST"
    },
    "3647": {
      "op": "SWAP11"
    },
    "3648": {
      "op": "SWAP10"
    },
    "3649": {
      "op": "POP"
    },
    "3650": {
      "op": "POP"
    },
    "3651": {
      "op": "POP"
    },
    "3652": {
      "op": "POP"
    },
    "3653": {
      "op": "POP"
    },
    "3654": {
      "op": "POP"
    },
    "3655": {
      "op": "POP"
    },
    "3656": {
      "op": "POP"
    },
    "3657": {
      "op": "POP"
    },
    "3658": {
      "op": "POP"
    },
    "3659": {
      "jump": "o",
      "op": "JUMP"
    },
    "3660": {
      "op": "JUMPDEST"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3665": {
      "op": "DUP3"
    },
    "3666": {
      "op": "ADD"
    },
    "3667": {
      "op": "PUSH3",
      "value": "0xE61"
    },
    "3671": {
      "op": "JUMPI"
    },
    "3672": {
      "op": "PUSH3",
      "value": "0xE61"
    },
    "3676": {
      "op": "PUSH3",
      "value": "0xC83"
    },
    "3680": {
      "jump": "i",
      "op": "JUMP"
    },
    "3681": {
      "op": "JUMPDEST"
    },
    "3682": {
      "op": "POP"
    },
    "3683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3685": {
      "op": "ADD"
    },
    "3686": {
      "op": "SWAP1"
    },
    "3687": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "012ecedd9719905d97251198dd8f40c929e8cdd5",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./CopyRightLock.sol\";\n\ncontract CopyRightLockCreator is Ownable {\n    \n    mapping(address => address[]) public addressToContract;\n    CopyRightLock[] private certificatesStorageArray;\n\n    uint256 public usdEntryFee; // variable storing minimum fee\n    AggregatorV3Interface internal ethUsdPriceFeed;\n\n    constructor(address _priceFeedAddress) {\n        ethUsdPriceFeed = AggregatorV3Interface(_priceFeedAddress); // Assignment of price feed variable\n        usdEntryFee = 50 * (10**18);\n    }\n\n    // Client needs to pay us in order to use addCertificate() function.\n    function addCertificate(\n        string memory _certificate,\n        string memory _date,\n        string memory _title,\n        address _address,\n        string memory _name,\n        string memory _additional,\n        string memory _hash\n    ) public payable {\n        // Money All Clients pay should be stored on CopyRightLockCreator Contract, so as owners of that Contract we can withdraw it.\n        require(msg.value >= getMinimumFee(), \"Not Enough ETH, you have to pay to create certificate!\");\n        CopyRightLock certificateStorage = new CopyRightLock(\n            _certificate,\n            _date,\n            _title,\n            _address,\n            _name,\n            _additional,\n            _hash\n        );\n        // Below adding new Certificate(Contract) to array, which contains all certificates ever created by all clients.\n        certificatesStorageArray.push(certificateStorage);\n        // Below is mapping Client address with all Certificates(Contracts) he deployed (tracking all certificates, which given Client is owner of).\n        addressToContract[msg.sender].push(address(certificateStorage));\n        //return address(certificateStorage); // MO: to read deployed POP\n    }\n\n    // NI: function that returns last certificate.\n    function getLastCertificate() public view onlyOwner returns (address) {\n        uint256 lastIndex = certificatesStorageArray.length - 1;\n        return address(certificatesStorageArray[lastIndex]);\n    }\n\n    // NI: Below function allows client to check all certificates(contracts) he owns.\n    function getCertificatesYouOwn(address _yourAddress)\n        public\n        view\n        returns (address[] memory)\n    {\n        return addressToContract[_yourAddress];\n    }\n\n    // NI: Below function defines minimal fee's to use addCertificate() and transOwnership() functions.\n    function getMinimumFee() public view returns (uint256) {\n        (, int256 price, , , ) = ethUsdPriceFeed.latestRoundData(); // Takes this from AggregatorV3 latestRoundData\n        uint256 adjustedPrice = uint256(price) * 10**10; // adjustedPrice has to be expressed with 18 decimals. From Chainlink pricefeed, we know ETH/USD has 8 decimals, so we need to multiply by 10^10\n        uint256 costToEnter = (usdEntryFee * 10**18) / adjustedPrice; // We cannot return decimals, hence we need to express 50$ with 50 * 10*18 / 2000 (adjusted price of ETH)\n        return costToEnter; // for testing\n    }\n\n    // NI: Read balance of contract factory\n    function showBalance() public view onlyOwner returns (uint256) {\n        uint256 POPbalance = address(this).balance;\n        return POPbalance;\n    }\n\n    // NI: Below function allows us as Owners of this contract to withdraw money gathered on this contract.\n    function withdraw() public payable onlyOwner {\n        payable(msg.sender).transfer(address(this).balance);\n    }\n\n    // NI: Function created for test's purposes\n    function arrayLengthGetter(address _yourAddress) public view onlyOwner returns (uint, uint) {\n        uint all_certs_array = certificatesStorageArray.length;\n        uint clients_owned_certs_array = getCertificatesYouOwn(_yourAddress).length;\n        return (all_certs_array, clients_owned_certs_array);\n    }\n\n    // NI: Function to change owner of certificate\n    function transOwnership(address current_owner, address new_owner, address cert_address) public payable {\n        \n        require(current_owner == msg.sender, \"You Are Not Owner Of This Certificate!\");\n        require(msg.value >= getMinimumFee(), \"Not Enough ETH, you have to pay to create certificate!\");\n        \n        address[] memory current_owner_certs = getCertificatesYouOwn(current_owner);\n        \n        delete(addressToContract[current_owner]);\n\n        // NI: Below transfer ownership method with require() statement above will prevent any malicious attempts of ownership transfers.        \n        for (uint i=0; i < current_owner_certs.length; i++){\n            if (current_owner_certs[i] == cert_address){\n                addressToContract[new_owner].push(cert_address);\n            }\n            if (current_owner_certs[i] != cert_address){\n                addressToContract[current_owner].push(current_owner_certs[i]);\n            }\n        }\n    }\n}\n",
  "sourceMap": "218:4807:4:-:0;;;502:188;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:1;936:18:0;:32::i;:::-;551:15:4;:58;;-1:-1:-1;;;;;;551:58:4;-1:-1:-1;;;;;551:58:4;;;;;;;;;;670:13;656:11;:27;218:4807;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:290:5:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;:::-;218:4807:4;;;;;;",
  "sourcePath": "contracts/CopyRightLockCreator.sol",
  "type": "contract"
}